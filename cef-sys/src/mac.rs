use libc::size_t;
use libc::wchar_t;
use libc::time_t;
use std::u32;

/* automatically generated by rust-bindgen */

pub type char16 = ::libc::c_ushort;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_string_wide_t {
    pub _str: *mut wchar_t,
    pub length: size_t,
    pub dtor: ::std::option::Option<extern "C" fn(str: *mut wchar_t) -> ()>,
}
impl ::std::default::Default for Struct__cef_string_wide_t {
    fn default() -> Struct__cef_string_wide_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_string_wide_t = Struct__cef_string_wide_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_string_utf8_t {
    pub _str: *mut ::libc::c_char,
    pub length: size_t,
    pub dtor: ::std::option::Option<extern "C" fn(str: *mut ::libc::c_char)
                                        -> ()>,
}
impl ::std::default::Default for Struct__cef_string_utf8_t {
    fn default() -> Struct__cef_string_utf8_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_string_utf8_t = Struct__cef_string_utf8_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_string_utf16_t {
    pub _str: *mut char16,
    pub length: size_t,
    pub dtor: ::std::option::Option<extern "C" fn(str: *mut char16) -> ()>,
}
impl ::std::default::Default for Struct__cef_string_utf16_t {
    fn default() -> Struct__cef_string_utf16_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_string_utf16_t = Struct__cef_string_utf16_t;
pub type cef_string_userfree_wide_t = *mut cef_string_wide_t;
pub type cef_string_userfree_utf8_t = *mut cef_string_utf8_t;
pub type cef_string_userfree_utf16_t = *mut cef_string_utf16_t;
pub type cef_char_t = char16;
pub type cef_string_userfree_t = cef_string_userfree_utf16_t;
pub type cef_string_t = cef_string_utf16_t;
pub type cef_string_list_t = *mut ::libc::c_void;
pub type cef_string_map_t = *mut ::libc::c_void;
pub type cef_string_multimap_t = *mut ::libc::c_void;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_time_t {
    pub year: ::libc::c_int,
    pub month: ::libc::c_int,
    pub day_of_week: ::libc::c_int,
    pub day_of_month: ::libc::c_int,
    pub hour: ::libc::c_int,
    pub minute: ::libc::c_int,
    pub second: ::libc::c_int,
    pub millisecond: ::libc::c_int,
}
impl ::std::default::Default for Struct__cef_time_t {
    fn default() -> Struct__cef_time_t { unsafe { ::std::mem::zeroed() } }
}
pub type cef_time_t = Struct__cef_time_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_main_args_t {
    pub argc: ::libc::c_int,
    pub argv: *mut *mut ::libc::c_char,
}
impl ::std::default::Default for Struct__cef_main_args_t {
    fn default() -> Struct__cef_main_args_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_main_args_t = Struct__cef_main_args_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_window_info_t {
    pub window_name: cef_string_t,
    pub x: ::libc::c_int,
    pub y: ::libc::c_int,
    pub width: ::libc::c_int,
    pub height: ::libc::c_int,
    pub hidden: ::libc::c_int,
    pub parent_view: *mut ::libc::c_void,
    pub windowless_rendering_enabled: ::libc::c_int,
    pub transparent_painting_enabled: ::libc::c_int,
    pub view: *mut ::libc::c_void,
}
impl ::std::default::Default for Struct__cef_window_info_t {
    fn default() -> Struct__cef_window_info_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_window_info_t = Struct__cef_window_info_t;
pub type int64 = ::libc::c_longlong;
pub type uint64 = ::libc::c_ulonglong;
pub type int32 = ::libc::c_int;
pub type uint32 = ::libc::c_uint;
pub type cef_color_t = uint32;
pub type Enum_Unnamed1 = ::libc::c_uint;
pub const LOGSEVERITY_DEFAULT: ::libc::c_uint = 0;
pub const LOGSEVERITY_VERBOSE: ::libc::c_uint = 1;
pub const LOGSEVERITY_INFO: ::libc::c_uint = 2;
pub const LOGSEVERITY_WARNING: ::libc::c_uint = 3;
pub const LOGSEVERITY_ERROR: ::libc::c_uint = 4;
pub const LOGSEVERITY_DISABLE: ::libc::c_uint = 99;
pub type cef_log_severity_t = Enum_Unnamed1;
pub type Enum_Unnamed2 = ::libc::c_uint;
pub const STATE_DEFAULT: ::libc::c_uint = 0;
pub const STATE_ENABLED: ::libc::c_uint = 1;
pub const STATE_DISABLED: ::libc::c_uint = 2;
pub type cef_state_t = Enum_Unnamed2;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_settings_t {
    pub size: size_t,
    pub single_process: ::libc::c_int,
    pub no_sandbox: ::libc::c_int,
    pub browser_subprocess_path: cef_string_t,
    pub multi_threaded_message_loop: ::libc::c_int,
    pub windowless_rendering_enabled: ::libc::c_int,
    pub command_line_args_disabled: ::libc::c_int,
    pub cache_path: cef_string_t,
    pub persist_session_cookies: ::libc::c_int,
    pub user_agent: cef_string_t,
    pub product_version: cef_string_t,
    pub locale: cef_string_t,
    pub log_file: cef_string_t,
    pub log_severity: cef_log_severity_t,
    pub javascript_flags: cef_string_t,
    pub resources_dir_path: cef_string_t,
    pub locales_dir_path: cef_string_t,
    pub pack_loading_disabled: ::libc::c_int,
    pub remote_debugging_port: ::libc::c_int,
    pub uncaught_exception_stack_size: ::libc::c_int,
    pub context_safety_implementation: ::libc::c_int,
    pub ignore_certificate_errors: ::libc::c_int,
    pub background_color: cef_color_t,
}
impl ::std::default::Default for Struct__cef_settings_t {
    fn default() -> Struct__cef_settings_t { unsafe { ::std::mem::zeroed() } }
}
pub type cef_settings_t = Struct__cef_settings_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_browser_settings_t {
    pub size: size_t,
    pub windowless_frame_rate: ::libc::c_int,
    pub standard_font_family: cef_string_t,
    pub fixed_font_family: cef_string_t,
    pub serif_font_family: cef_string_t,
    pub sans_serif_font_family: cef_string_t,
    pub cursive_font_family: cef_string_t,
    pub fantasy_font_family: cef_string_t,
    pub default_font_size: ::libc::c_int,
    pub default_fixed_font_size: ::libc::c_int,
    pub minimum_font_size: ::libc::c_int,
    pub minimum_logical_font_size: ::libc::c_int,
    pub default_encoding: cef_string_t,
    pub remote_fonts: cef_state_t,
    pub javascript: cef_state_t,
    pub javascript_open_windows: cef_state_t,
    pub javascript_close_windows: cef_state_t,
    pub javascript_access_clipboard: cef_state_t,
    pub javascript_dom_paste: cef_state_t,
    pub caret_browsing: cef_state_t,
    pub java: cef_state_t,
    pub plugins: cef_state_t,
    pub universal_access_from_file_urls: cef_state_t,
    pub file_access_from_file_urls: cef_state_t,
    pub web_security: cef_state_t,
    pub image_loading: cef_state_t,
    pub image_shrink_standalone_to_fit: cef_state_t,
    pub text_area_resize: cef_state_t,
    pub tab_to_links: cef_state_t,
    pub local_storage: cef_state_t,
    pub databases: cef_state_t,
    pub application_cache: cef_state_t,
    pub webgl: cef_state_t,
    pub background_color: cef_color_t,
}
impl ::std::default::Default for Struct__cef_browser_settings_t {
    fn default() -> Struct__cef_browser_settings_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_browser_settings_t = Struct__cef_browser_settings_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_urlparts_t {
    pub spec: cef_string_t,
    pub scheme: cef_string_t,
    pub username: cef_string_t,
    pub password: cef_string_t,
    pub host: cef_string_t,
    pub port: cef_string_t,
    pub origin: cef_string_t,
    pub path: cef_string_t,
    pub query: cef_string_t,
}
impl ::std::default::Default for Struct__cef_urlparts_t {
    fn default() -> Struct__cef_urlparts_t { unsafe { ::std::mem::zeroed() } }
}
pub type cef_urlparts_t = Struct__cef_urlparts_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_cookie_t {
    pub name: cef_string_t,
    pub value: cef_string_t,
    pub domain: cef_string_t,
    pub path: cef_string_t,
    pub secure: ::libc::c_int,
    pub httponly: ::libc::c_int,
    pub creation: cef_time_t,
    pub last_access: cef_time_t,
    pub has_expires: ::libc::c_int,
    pub expires: cef_time_t,
}
impl ::std::default::Default for Struct__cef_cookie_t {
    fn default() -> Struct__cef_cookie_t { unsafe { ::std::mem::zeroed() } }
}
pub type cef_cookie_t = Struct__cef_cookie_t;
pub type Enum_Unnamed3 = ::libc::c_uint;
pub const TS_ABNORMAL_TERMINATION: ::libc::c_uint = 0;
pub const TS_PROCESS_WAS_KILLED: ::libc::c_uint = 1;
pub const TS_PROCESS_CRASHED: ::libc::c_uint = 2;
pub type cef_termination_status_t = Enum_Unnamed3;
pub type Enum_Unnamed4 = ::libc::c_uint;
pub const PK_DIR_CURRENT: ::libc::c_uint = 0;
pub const PK_DIR_EXE: ::libc::c_uint = 1;
pub const PK_DIR_MODULE: ::libc::c_uint = 2;
pub const PK_DIR_TEMP: ::libc::c_uint = 3;
pub const PK_FILE_EXE: ::libc::c_uint = 4;
pub const PK_FILE_MODULE: ::libc::c_uint = 5;
pub type cef_path_key_t = Enum_Unnamed4;
pub type Enum_Unnamed5 = ::libc::c_uint;
pub const ST_LOCALSTORAGE: ::libc::c_uint = 0;
pub const ST_SESSIONSTORAGE: ::libc::c_uint = 1;
pub type cef_storage_type_t = Enum_Unnamed5;
pub type Enum_Unnamed6 = ::libc::c_int;
pub const ERR_NONE: ::libc::c_int = 0;
pub const ERR_FAILED: ::libc::c_int = -2;
pub const ERR_ABORTED: ::libc::c_int = -3;
pub const ERR_INVALID_ARGUMENT: ::libc::c_int = -4;
pub const ERR_INVALID_HANDLE: ::libc::c_int = -5;
pub const ERR_FILE_NOT_FOUND: ::libc::c_int = -6;
pub const ERR_TIMED_OUT: ::libc::c_int = -7;
pub const ERR_FILE_TOO_BIG: ::libc::c_int = -8;
pub const ERR_UNEXPECTED: ::libc::c_int = -9;
pub const ERR_ACCESS_DENIED: ::libc::c_int = -10;
pub const ERR_NOT_IMPLEMENTED: ::libc::c_int = -11;
pub const ERR_CONNECTION_CLOSED: ::libc::c_int = -100;
pub const ERR_CONNECTION_RESET: ::libc::c_int = -101;
pub const ERR_CONNECTION_REFUSED: ::libc::c_int = -102;
pub const ERR_CONNECTION_ABORTED: ::libc::c_int = -103;
pub const ERR_CONNECTION_FAILED: ::libc::c_int = -104;
pub const ERR_NAME_NOT_RESOLVED: ::libc::c_int = -105;
pub const ERR_INTERNET_DISCONNECTED: ::libc::c_int = -106;
pub const ERR_SSL_PROTOCOL_ERROR: ::libc::c_int = -107;
pub const ERR_ADDRESS_INVALID: ::libc::c_int = -108;
pub const ERR_ADDRESS_UNREACHABLE: ::libc::c_int = -109;
pub const ERR_SSL_CLIENT_AUTH_CERT_NEEDED: ::libc::c_int = -110;
pub const ERR_TUNNEL_CONNECTION_FAILED: ::libc::c_int = -111;
pub const ERR_NO_SSL_VERSIONS_ENABLED: ::libc::c_int = -112;
pub const ERR_SSL_VERSION_OR_CIPHER_MISMATCH: ::libc::c_int = -113;
pub const ERR_SSL_RENEGOTIATION_REQUESTED: ::libc::c_int = -114;
pub const ERR_CERT_COMMON_NAME_INVALID: ::libc::c_int = -200;
pub const ERR_CERT_DATE_INVALID: ::libc::c_int = -201;
pub const ERR_CERT_AUTHORITY_INVALID: ::libc::c_int = -202;
pub const ERR_CERT_CONTAINS_ERRORS: ::libc::c_int = -203;
pub const ERR_CERT_NO_REVOCATION_MECHANISM: ::libc::c_int = -204;
pub const ERR_CERT_UNABLE_TO_CHECK_REVOCATION: ::libc::c_int = -205;
pub const ERR_CERT_REVOKED: ::libc::c_int = -206;
pub const ERR_CERT_INVALID: ::libc::c_int = -207;
pub const ERR_CERT_END: ::libc::c_int = -208;
pub const ERR_INVALID_URL: ::libc::c_int = -300;
pub const ERR_DISALLOWED_URL_SCHEME: ::libc::c_int = -301;
pub const ERR_UNKNOWN_URL_SCHEME: ::libc::c_int = -302;
pub const ERR_TOO_MANY_REDIRECTS: ::libc::c_int = -310;
pub const ERR_UNSAFE_REDIRECT: ::libc::c_int = -311;
pub const ERR_UNSAFE_PORT: ::libc::c_int = -312;
pub const ERR_INVALID_RESPONSE: ::libc::c_int = -320;
pub const ERR_INVALID_CHUNKED_ENCODING: ::libc::c_int = -321;
pub const ERR_METHOD_NOT_SUPPORTED: ::libc::c_int = -322;
pub const ERR_UNEXPECTED_PROXY_AUTH: ::libc::c_int = -323;
pub const ERR_EMPTY_RESPONSE: ::libc::c_int = -324;
pub const ERR_RESPONSE_HEADERS_TOO_BIG: ::libc::c_int = -325;
pub const ERR_CACHE_MISS: ::libc::c_int = -400;
pub const ERR_INSECURE_RESPONSE: ::libc::c_int = -501;
pub type cef_errorcode_t = Enum_Unnamed6;
pub type Enum_Unnamed7 = ::libc::c_uint;
pub const DRAG_OPERATION_NONE: ::libc::c_uint = 0;
pub const DRAG_OPERATION_COPY: ::libc::c_uint = 1;
pub const DRAG_OPERATION_LINK: ::libc::c_uint = 2;
pub const DRAG_OPERATION_GENERIC: ::libc::c_uint = 4;
pub const DRAG_OPERATION_PRIVATE: ::libc::c_uint = 8;
pub const DRAG_OPERATION_MOVE: ::libc::c_uint = 16;
pub const DRAG_OPERATION_DELETE: ::libc::c_uint = 32;
pub const DRAG_OPERATION_EVERY: ::libc::c_uint = u32::MAX;
pub type cef_drag_operations_mask_t = Enum_Unnamed7;
pub type Enum_Unnamed8 = ::libc::c_uint;
pub const V8_ACCESS_CONTROL_DEFAULT: ::libc::c_uint = 0;
pub const V8_ACCESS_CONTROL_ALL_CAN_READ: ::libc::c_uint = 1;
pub const V8_ACCESS_CONTROL_ALL_CAN_WRITE: ::libc::c_uint = 2;
pub const V8_ACCESS_CONTROL_PROHIBITS_OVERWRITING: ::libc::c_uint = 4;
pub type cef_v8_accesscontrol_t = Enum_Unnamed8;
pub type Enum_Unnamed9 = ::libc::c_uint;
pub const V8_PROPERTY_ATTRIBUTE_NONE: ::libc::c_uint = 0;
pub const V8_PROPERTY_ATTRIBUTE_READONLY: ::libc::c_uint = 1;
pub const V8_PROPERTY_ATTRIBUTE_DONTENUM: ::libc::c_uint = 2;
pub const V8_PROPERTY_ATTRIBUTE_DONTDELETE: ::libc::c_uint = 4;
pub type cef_v8_propertyattribute_t = Enum_Unnamed9;
pub type Enum_Unnamed10 = ::libc::c_uint;
pub const PDE_TYPE_EMPTY: ::libc::c_uint = 0;
pub const PDE_TYPE_BYTES: ::libc::c_uint = 1;
pub const PDE_TYPE_FILE: ::libc::c_uint = 2;
pub type cef_postdataelement_type_t = Enum_Unnamed10;
pub type Enum_Unnamed11 = ::libc::c_uint;
pub const RT_MAIN_FRAME: ::libc::c_uint = 0;
pub const RT_SUB_FRAME: ::libc::c_uint = 1;
pub const RT_STYLESHEET: ::libc::c_uint = 2;
pub const RT_SCRIPT: ::libc::c_uint = 3;
pub const RT_IMAGE: ::libc::c_uint = 4;
pub const RT_FONT_RESOURCE: ::libc::c_uint = 5;
pub const RT_SUB_RESOURCE: ::libc::c_uint = 6;
pub const RT_OBJECT: ::libc::c_uint = 7;
pub const RT_MEDIA: ::libc::c_uint = 8;
pub const RT_WORKER: ::libc::c_uint = 9;
pub const RT_SHARED_WORKER: ::libc::c_uint = 10;
pub const RT_PREFETCH: ::libc::c_uint = 11;
pub const RT_FAVICON: ::libc::c_uint = 12;
pub const RT_XHR: ::libc::c_uint = 13;
pub const RT_PING: ::libc::c_uint = 14;
pub const RT_SERVICE_WORKER: ::libc::c_uint = 15;
pub type cef_resource_type_t = Enum_Unnamed11;
pub type Enum_Unnamed12 = ::libc::c_uint;
pub const TT_LINK: ::libc::c_uint = 0;
pub const TT_EXPLICIT: ::libc::c_uint = 1;
pub const TT_AUTO_SUBFRAME: ::libc::c_uint = 3;
pub const TT_MANUAL_SUBFRAME: ::libc::c_uint = 4;
pub const TT_FORM_SUBMIT: ::libc::c_uint = 7;
pub const TT_RELOAD: ::libc::c_uint = 8;
pub const TT_SOURCE_MASK: ::libc::c_uint = 255;
pub const TT_BLOCKED_FLAG: ::libc::c_uint = 8388608;
pub const TT_FORWARD_BACK_FLAG: ::libc::c_uint = 16777216;
pub const TT_CHAIN_START_FLAG: ::libc::c_uint = 268435456;
pub const TT_CHAIN_END_FLAG: ::libc::c_uint = 536870912;
pub const TT_CLIENT_REDIRECT_FLAG: ::libc::c_uint = 1073741824;
pub const TT_SERVER_REDIRECT_FLAG: ::libc::c_uint = 0x80000000;
pub const TT_IS_REDIRECT_MASK: ::libc::c_uint = 0xC0000000;
pub const TT_QUALIFIER_MASK: ::libc::c_uint = 0xFFFFFF00;
pub type cef_transition_type_t = Enum_Unnamed12;
pub type Enum_Unnamed13 = ::libc::c_uint;
pub const UR_FLAG_NONE: ::libc::c_uint = 0;
pub const UR_FLAG_SKIP_CACHE: ::libc::c_uint = 1;
pub const UR_FLAG_ALLOW_CACHED_CREDENTIALS: ::libc::c_uint = 2;
pub const UR_FLAG_REPORT_UPLOAD_PROGRESS: ::libc::c_uint = 8;
pub const UR_FLAG_REPORT_RAW_HEADERS: ::libc::c_uint = 32;
pub const UR_FLAG_NO_DOWNLOAD_DATA: ::libc::c_uint = 64;
pub const UR_FLAG_NO_RETRY_ON_5XX: ::libc::c_uint = 128;
pub type cef_urlrequest_flags_t = Enum_Unnamed13;
pub type Enum_Unnamed14 = ::libc::c_uint;
pub const UR_UNKNOWN: ::libc::c_uint = 0;
pub const UR_SUCCESS: ::libc::c_uint = 1;
pub const UR_IO_PENDING: ::libc::c_uint = 2;
pub const UR_CANCELED: ::libc::c_uint = 3;
pub const UR_FAILED: ::libc::c_uint = 4;
pub type cef_urlrequest_status_t = Enum_Unnamed14;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_point_t {
    pub x: ::libc::c_int,
    pub y: ::libc::c_int,
}
impl ::std::default::Default for Struct__cef_point_t {
    fn default() -> Struct__cef_point_t { unsafe { ::std::mem::zeroed() } }
}
pub type cef_point_t = Struct__cef_point_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_rect_t {
    pub x: ::libc::c_int,
    pub y: ::libc::c_int,
    pub width: ::libc::c_int,
    pub height: ::libc::c_int,
}
impl ::std::default::Default for Struct__cef_rect_t {
    fn default() -> Struct__cef_rect_t { unsafe { ::std::mem::zeroed() } }
}
pub type cef_rect_t = Struct__cef_rect_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_size_t {
    pub width: ::libc::c_int,
    pub height: ::libc::c_int,
}
impl ::std::default::Default for Struct__cef_size_t {
    fn default() -> Struct__cef_size_t { unsafe { ::std::mem::zeroed() } }
}
pub type cef_size_t = Struct__cef_size_t;
pub type Enum_Unnamed15 = ::libc::c_uint;
pub const PID_BROWSER: ::libc::c_uint = 0;
pub const PID_RENDERER: ::libc::c_uint = 1;
pub type cef_process_id_t = Enum_Unnamed15;
pub type Enum_Unnamed16 = ::libc::c_uint;
pub const TID_UI: ::libc::c_uint = 0;
pub const TID_DB: ::libc::c_uint = 1;
pub const TID_FILE: ::libc::c_uint = 2;
pub const TID_FILE_USER_BLOCKING: ::libc::c_uint = 3;
pub const TID_PROCESS_LAUNCHER: ::libc::c_uint = 4;
pub const TID_CACHE: ::libc::c_uint = 5;
pub const TID_IO: ::libc::c_uint = 6;
pub const TID_RENDERER: ::libc::c_uint = 7;
pub type cef_thread_id_t = Enum_Unnamed16;
pub type Enum_Unnamed17 = ::libc::c_uint;
pub const VTYPE_INVALID: ::libc::c_uint = 0;
pub const VTYPE_NULL: ::libc::c_uint = 1;
pub const VTYPE_BOOL: ::libc::c_uint = 2;
pub const VTYPE_INT: ::libc::c_uint = 3;
pub const VTYPE_DOUBLE: ::libc::c_uint = 4;
pub const VTYPE_STRING: ::libc::c_uint = 5;
pub const VTYPE_BINARY: ::libc::c_uint = 6;
pub const VTYPE_DICTIONARY: ::libc::c_uint = 7;
pub const VTYPE_LIST: ::libc::c_uint = 8;
pub type cef_value_type_t = Enum_Unnamed17;
pub type Enum_Unnamed18 = ::libc::c_uint;
pub const JSDIALOGTYPE_ALERT: ::libc::c_uint = 0;
pub const JSDIALOGTYPE_CONFIRM: ::libc::c_uint = 1;
pub const JSDIALOGTYPE_PROMPT: ::libc::c_uint = 2;
pub type cef_jsdialog_type_t = Enum_Unnamed18;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_screen_info_t {
    pub device_scale_factor: ::libc::c_float,
    pub depth: ::libc::c_int,
    pub depth_per_component: ::libc::c_int,
    pub is_monochrome: ::libc::c_int,
    pub rect: cef_rect_t,
    pub available_rect: cef_rect_t,
}
impl ::std::default::Default for Struct__cef_screen_info_t {
    fn default() -> Struct__cef_screen_info_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_screen_info_t = Struct__cef_screen_info_t;
pub type Enum_Unnamed19 = ::libc::c_uint;
pub const MENU_ID_BACK: ::libc::c_uint = 100;
pub const MENU_ID_FORWARD: ::libc::c_uint = 101;
pub const MENU_ID_RELOAD: ::libc::c_uint = 102;
pub const MENU_ID_RELOAD_NOCACHE: ::libc::c_uint = 103;
pub const MENU_ID_STOPLOAD: ::libc::c_uint = 104;
pub const MENU_ID_UNDO: ::libc::c_uint = 110;
pub const MENU_ID_REDO: ::libc::c_uint = 111;
pub const MENU_ID_CUT: ::libc::c_uint = 112;
pub const MENU_ID_COPY: ::libc::c_uint = 113;
pub const MENU_ID_PASTE: ::libc::c_uint = 114;
pub const MENU_ID_DELETE: ::libc::c_uint = 115;
pub const MENU_ID_SELECT_ALL: ::libc::c_uint = 116;
pub const MENU_ID_FIND: ::libc::c_uint = 130;
pub const MENU_ID_PRINT: ::libc::c_uint = 131;
pub const MENU_ID_VIEW_SOURCE: ::libc::c_uint = 132;
pub const MENU_ID_SPELLCHECK_SUGGESTION_0: ::libc::c_uint = 200;
pub const MENU_ID_SPELLCHECK_SUGGESTION_1: ::libc::c_uint = 201;
pub const MENU_ID_SPELLCHECK_SUGGESTION_2: ::libc::c_uint = 202;
pub const MENU_ID_SPELLCHECK_SUGGESTION_3: ::libc::c_uint = 203;
pub const MENU_ID_SPELLCHECK_SUGGESTION_4: ::libc::c_uint = 204;
pub const MENU_ID_SPELLCHECK_SUGGESTION_LAST: ::libc::c_uint = 204;
pub const MENU_ID_NO_SPELLING_SUGGESTIONS: ::libc::c_uint = 205;
pub const MENU_ID_ADD_TO_DICTIONARY: ::libc::c_uint = 206;
pub const MENU_ID_USER_FIRST: ::libc::c_uint = 26500;
pub const MENU_ID_USER_LAST: ::libc::c_uint = 28500;
pub type cef_menu_id_t = Enum_Unnamed19;
pub type Enum_Unnamed20 = ::libc::c_uint;
pub const MBT_LEFT: ::libc::c_uint = 0;
pub const MBT_MIDDLE: ::libc::c_uint = 1;
pub const MBT_RIGHT: ::libc::c_uint = 2;
pub type cef_mouse_button_type_t = Enum_Unnamed20;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_mouse_event_t {
    pub x: ::libc::c_int,
    pub y: ::libc::c_int,
    pub modifiers: uint32,
}
impl ::std::default::Default for Struct__cef_mouse_event_t {
    fn default() -> Struct__cef_mouse_event_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_mouse_event_t = Struct__cef_mouse_event_t;
pub type Enum_Unnamed21 = ::libc::c_uint;
pub const PET_VIEW: ::libc::c_uint = 0;
pub const PET_POPUP: ::libc::c_uint = 1;
pub type cef_paint_element_type_t = Enum_Unnamed21;
pub type Enum_Unnamed22 = ::libc::c_uint;
pub const EVENTFLAG_NONE: ::libc::c_uint = 0;
pub const EVENTFLAG_CAPS_LOCK_ON: ::libc::c_uint = 1;
pub const EVENTFLAG_SHIFT_DOWN: ::libc::c_uint = 2;
pub const EVENTFLAG_CONTROL_DOWN: ::libc::c_uint = 4;
pub const EVENTFLAG_ALT_DOWN: ::libc::c_uint = 8;
pub const EVENTFLAG_LEFT_MOUSE_BUTTON: ::libc::c_uint = 16;
pub const EVENTFLAG_MIDDLE_MOUSE_BUTTON: ::libc::c_uint = 32;
pub const EVENTFLAG_RIGHT_MOUSE_BUTTON: ::libc::c_uint = 64;
pub const EVENTFLAG_COMMAND_DOWN: ::libc::c_uint = 128;
pub const EVENTFLAG_NUM_LOCK_ON: ::libc::c_uint = 256;
pub const EVENTFLAG_IS_KEY_PAD: ::libc::c_uint = 512;
pub const EVENTFLAG_IS_LEFT: ::libc::c_uint = 1024;
pub const EVENTFLAG_IS_RIGHT: ::libc::c_uint = 2048;
pub type cef_event_flags_t = Enum_Unnamed22;
pub type Enum_Unnamed23 = ::libc::c_uint;
pub const MENUITEMTYPE_NONE: ::libc::c_uint = 0;
pub const MENUITEMTYPE_COMMAND: ::libc::c_uint = 1;
pub const MENUITEMTYPE_CHECK: ::libc::c_uint = 2;
pub const MENUITEMTYPE_RADIO: ::libc::c_uint = 3;
pub const MENUITEMTYPE_SEPARATOR: ::libc::c_uint = 4;
pub const MENUITEMTYPE_SUBMENU: ::libc::c_uint = 5;
pub type cef_menu_item_type_t = Enum_Unnamed23;
pub type Enum_Unnamed24 = ::libc::c_uint;
pub const CM_TYPEFLAG_NONE: ::libc::c_uint = 0;
pub const CM_TYPEFLAG_PAGE: ::libc::c_uint = 1;
pub const CM_TYPEFLAG_FRAME: ::libc::c_uint = 2;
pub const CM_TYPEFLAG_LINK: ::libc::c_uint = 4;
pub const CM_TYPEFLAG_MEDIA: ::libc::c_uint = 8;
pub const CM_TYPEFLAG_SELECTION: ::libc::c_uint = 16;
pub const CM_TYPEFLAG_EDITABLE: ::libc::c_uint = 32;
pub type cef_context_menu_type_flags_t = Enum_Unnamed24;
pub type Enum_Unnamed25 = ::libc::c_uint;
pub const CM_MEDIATYPE_NONE: ::libc::c_uint = 0;
pub const CM_MEDIATYPE_IMAGE: ::libc::c_uint = 1;
pub const CM_MEDIATYPE_VIDEO: ::libc::c_uint = 2;
pub const CM_MEDIATYPE_AUDIO: ::libc::c_uint = 3;
pub const CM_MEDIATYPE_FILE: ::libc::c_uint = 4;
pub const CM_MEDIATYPE_PLUGIN: ::libc::c_uint = 5;
pub type cef_context_menu_media_type_t = Enum_Unnamed25;
pub type Enum_Unnamed26 = ::libc::c_uint;
pub const CM_MEDIAFLAG_NONE: ::libc::c_uint = 0;
pub const CM_MEDIAFLAG_ERROR: ::libc::c_uint = 1;
pub const CM_MEDIAFLAG_PAUSED: ::libc::c_uint = 2;
pub const CM_MEDIAFLAG_MUTED: ::libc::c_uint = 4;
pub const CM_MEDIAFLAG_LOOP: ::libc::c_uint = 8;
pub const CM_MEDIAFLAG_CAN_SAVE: ::libc::c_uint = 16;
pub const CM_MEDIAFLAG_HAS_AUDIO: ::libc::c_uint = 32;
pub const CM_MEDIAFLAG_HAS_VIDEO: ::libc::c_uint = 64;
pub const CM_MEDIAFLAG_CONTROL_ROOT_ELEMENT: ::libc::c_uint = 128;
pub const CM_MEDIAFLAG_CAN_PRINT: ::libc::c_uint = 256;
pub const CM_MEDIAFLAG_CAN_ROTATE: ::libc::c_uint = 512;
pub type cef_context_menu_media_state_flags_t = Enum_Unnamed26;
pub type Enum_Unnamed27 = ::libc::c_uint;
pub const CM_EDITFLAG_NONE: ::libc::c_uint = 0;
pub const CM_EDITFLAG_CAN_UNDO: ::libc::c_uint = 1;
pub const CM_EDITFLAG_CAN_REDO: ::libc::c_uint = 2;
pub const CM_EDITFLAG_CAN_CUT: ::libc::c_uint = 4;
pub const CM_EDITFLAG_CAN_COPY: ::libc::c_uint = 8;
pub const CM_EDITFLAG_CAN_PASTE: ::libc::c_uint = 16;
pub const CM_EDITFLAG_CAN_DELETE: ::libc::c_uint = 32;
pub const CM_EDITFLAG_CAN_SELECT_ALL: ::libc::c_uint = 64;
pub const CM_EDITFLAG_CAN_TRANSLATE: ::libc::c_uint = 128;
pub type cef_context_menu_edit_state_flags_t = Enum_Unnamed27;
pub type Enum_Unnamed28 = ::libc::c_uint;
pub const KEYEVENT_RAWKEYDOWN: ::libc::c_uint = 0;
pub const KEYEVENT_KEYDOWN: ::libc::c_uint = 1;
pub const KEYEVENT_KEYUP: ::libc::c_uint = 2;
pub const KEYEVENT_CHAR: ::libc::c_uint = 3;
pub type cef_key_event_type_t = Enum_Unnamed28;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_key_event_t {
    pub _type: cef_key_event_type_t,
    pub modifiers: uint32,
    pub windows_key_code: ::libc::c_int,
    pub native_key_code: ::libc::c_int,
    pub is_system_key: ::libc::c_int,
    pub character: char16,
    pub unmodified_character: char16,
    pub focus_on_editable_field: ::libc::c_int,
}
impl ::std::default::Default for Struct__cef_key_event_t {
    fn default() -> Struct__cef_key_event_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_key_event_t = Struct__cef_key_event_t;
pub type Enum_Unnamed29 = ::libc::c_uint;
pub const FOCUS_SOURCE_NAVIGATION: ::libc::c_uint = 0;
pub const FOCUS_SOURCE_SYSTEM: ::libc::c_uint = 1;
pub type cef_focus_source_t = Enum_Unnamed29;
pub type Enum_Unnamed30 = ::libc::c_uint;
pub const NAVIGATION_LINK_CLICKED: ::libc::c_uint = 0;
pub const NAVIGATION_FORM_SUBMITTED: ::libc::c_uint = 1;
pub const NAVIGATION_BACK_FORWARD: ::libc::c_uint = 2;
pub const NAVIGATION_RELOAD: ::libc::c_uint = 3;
pub const NAVIGATION_FORM_RESUBMITTED: ::libc::c_uint = 4;
pub const NAVIGATION_OTHER: ::libc::c_uint = 5;
pub type cef_navigation_type_t = Enum_Unnamed30;
pub type Enum_Unnamed31 = ::libc::c_uint;
pub const XML_ENCODING_NONE: ::libc::c_uint = 0;
pub const XML_ENCODING_UTF8: ::libc::c_uint = 1;
pub const XML_ENCODING_UTF16LE: ::libc::c_uint = 2;
pub const XML_ENCODING_UTF16BE: ::libc::c_uint = 3;
pub const XML_ENCODING_ASCII: ::libc::c_uint = 4;
pub type cef_xml_encoding_type_t = Enum_Unnamed31;
pub type Enum_Unnamed32 = ::libc::c_uint;
pub const XML_NODE_UNSUPPORTED: ::libc::c_uint = 0;
pub const XML_NODE_PROCESSING_INSTRUCTION: ::libc::c_uint = 1;
pub const XML_NODE_DOCUMENT_TYPE: ::libc::c_uint = 2;
pub const XML_NODE_ELEMENT_START: ::libc::c_uint = 3;
pub const XML_NODE_ELEMENT_END: ::libc::c_uint = 4;
pub const XML_NODE_ATTRIBUTE: ::libc::c_uint = 5;
pub const XML_NODE_TEXT: ::libc::c_uint = 6;
pub const XML_NODE_CDATA: ::libc::c_uint = 7;
pub const XML_NODE_ENTITY_REFERENCE: ::libc::c_uint = 8;
pub const XML_NODE_WHITESPACE: ::libc::c_uint = 9;
pub const XML_NODE_COMMENT: ::libc::c_uint = 10;
pub type cef_xml_node_type_t = Enum_Unnamed32;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_popup_features_t {
    pub x: ::libc::c_int,
    pub xSet: ::libc::c_int,
    pub y: ::libc::c_int,
    pub ySet: ::libc::c_int,
    pub width: ::libc::c_int,
    pub widthSet: ::libc::c_int,
    pub height: ::libc::c_int,
    pub heightSet: ::libc::c_int,
    pub menuBarVisible: ::libc::c_int,
    pub statusBarVisible: ::libc::c_int,
    pub toolBarVisible: ::libc::c_int,
    pub locationBarVisible: ::libc::c_int,
    pub scrollbarsVisible: ::libc::c_int,
    pub resizable: ::libc::c_int,
    pub fullscreen: ::libc::c_int,
    pub dialog: ::libc::c_int,
    pub additionalFeatures: cef_string_list_t,
}
impl ::std::default::Default for Struct__cef_popup_features_t {
    fn default() -> Struct__cef_popup_features_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_popup_features_t = Struct__cef_popup_features_t;
pub type Enum_Unnamed33 = ::libc::c_uint;
pub const DOM_DOCUMENT_TYPE_UNKNOWN: ::libc::c_uint = 0;
pub const DOM_DOCUMENT_TYPE_HTML: ::libc::c_uint = 1;
pub const DOM_DOCUMENT_TYPE_XHTML: ::libc::c_uint = 2;
pub const DOM_DOCUMENT_TYPE_PLUGIN: ::libc::c_uint = 3;
pub type cef_dom_document_type_t = Enum_Unnamed33;
pub type Enum_Unnamed34 = ::libc::c_uint;
pub const DOM_EVENT_CATEGORY_UNKNOWN: ::libc::c_uint = 0;
pub const DOM_EVENT_CATEGORY_UI: ::libc::c_uint = 1;
pub const DOM_EVENT_CATEGORY_MOUSE: ::libc::c_uint = 2;
pub const DOM_EVENT_CATEGORY_MUTATION: ::libc::c_uint = 4;
pub const DOM_EVENT_CATEGORY_KEYBOARD: ::libc::c_uint = 8;
pub const DOM_EVENT_CATEGORY_TEXT: ::libc::c_uint = 16;
pub const DOM_EVENT_CATEGORY_COMPOSITION: ::libc::c_uint = 32;
pub const DOM_EVENT_CATEGORY_DRAG: ::libc::c_uint = 64;
pub const DOM_EVENT_CATEGORY_CLIPBOARD: ::libc::c_uint = 128;
pub const DOM_EVENT_CATEGORY_MESSAGE: ::libc::c_uint = 256;
pub const DOM_EVENT_CATEGORY_WHEEL: ::libc::c_uint = 512;
pub const DOM_EVENT_CATEGORY_BEFORE_TEXT_INSERTED: ::libc::c_uint = 1024;
pub const DOM_EVENT_CATEGORY_OVERFLOW: ::libc::c_uint = 2048;
pub const DOM_EVENT_CATEGORY_PAGE_TRANSITION: ::libc::c_uint = 4096;
pub const DOM_EVENT_CATEGORY_POPSTATE: ::libc::c_uint = 8192;
pub const DOM_EVENT_CATEGORY_PROGRESS: ::libc::c_uint = 16384;
pub const DOM_EVENT_CATEGORY_XMLHTTPREQUEST_PROGRESS: ::libc::c_uint = 32768;
pub type cef_dom_event_category_t = Enum_Unnamed34;
pub type Enum_Unnamed35 = ::libc::c_uint;
pub const DOM_EVENT_PHASE_UNKNOWN: ::libc::c_uint = 0;
pub const DOM_EVENT_PHASE_CAPTURING: ::libc::c_uint = 1;
pub const DOM_EVENT_PHASE_AT_TARGET: ::libc::c_uint = 2;
pub const DOM_EVENT_PHASE_BUBBLING: ::libc::c_uint = 3;
pub type cef_dom_event_phase_t = Enum_Unnamed35;
pub type Enum_Unnamed36 = ::libc::c_uint;
pub const DOM_NODE_TYPE_UNSUPPORTED: ::libc::c_uint = 0;
pub const DOM_NODE_TYPE_ELEMENT: ::libc::c_uint = 1;
pub const DOM_NODE_TYPE_ATTRIBUTE: ::libc::c_uint = 2;
pub const DOM_NODE_TYPE_TEXT: ::libc::c_uint = 3;
pub const DOM_NODE_TYPE_CDATA_SECTION: ::libc::c_uint = 4;
pub const DOM_NODE_TYPE_PROCESSING_INSTRUCTIONS: ::libc::c_uint = 5;
pub const DOM_NODE_TYPE_COMMENT: ::libc::c_uint = 6;
pub const DOM_NODE_TYPE_DOCUMENT: ::libc::c_uint = 7;
pub const DOM_NODE_TYPE_DOCUMENT_TYPE: ::libc::c_uint = 8;
pub const DOM_NODE_TYPE_DOCUMENT_FRAGMENT: ::libc::c_uint = 9;
pub type cef_dom_node_type_t = Enum_Unnamed36;
pub type Enum_Unnamed37 = ::libc::c_uint;
pub const FILE_DIALOG_OPEN: ::libc::c_uint = 0;
pub const FILE_DIALOG_OPEN_MULTIPLE: ::libc::c_uint = 1;
pub const FILE_DIALOG_OPEN_FOLDER: ::libc::c_uint = 2;
pub const FILE_DIALOG_SAVE: ::libc::c_uint = 3;
pub const FILE_DIALOG_TYPE_MASK: ::libc::c_uint = 255;
pub const FILE_DIALOG_OVERWRITEPROMPT_FLAG: ::libc::c_uint = 16777216;
pub const FILE_DIALOG_HIDEREADONLY_FLAG: ::libc::c_uint = 33554432;
pub type cef_file_dialog_mode_t = Enum_Unnamed37;
pub type Enum_Unnamed38 = ::libc::c_uint;
pub const GEOPOSITON_ERROR_NONE: ::libc::c_uint = 0;
pub const GEOPOSITON_ERROR_PERMISSION_DENIED: ::libc::c_uint = 1;
pub const GEOPOSITON_ERROR_POSITION_UNAVAILABLE: ::libc::c_uint = 2;
pub const GEOPOSITON_ERROR_TIMEOUT: ::libc::c_uint = 3;
pub type cef_geoposition_error_code_t = Enum_Unnamed38;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_geoposition_t {
    pub latitude: ::libc::c_double,
    pub longitude: ::libc::c_double,
    pub altitude: ::libc::c_double,
    pub accuracy: ::libc::c_double,
    pub altitude_accuracy: ::libc::c_double,
    pub heading: ::libc::c_double,
    pub speed: ::libc::c_double,
    pub timestamp: cef_time_t,
    pub error_code: cef_geoposition_error_code_t,
    pub error_message: cef_string_t,
}
impl ::std::default::Default for Struct__cef_geoposition_t {
    fn default() -> Struct__cef_geoposition_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_geoposition_t = Struct__cef_geoposition_t;
pub type Enum_Unnamed39 = ::libc::c_uint;
pub const COLOR_MODEL_UNKNOWN: ::libc::c_uint = 0;
pub const COLOR_MODEL_GRAY: ::libc::c_uint = 1;
pub const COLOR_MODEL_COLOR: ::libc::c_uint = 2;
pub const COLOR_MODEL_CMYK: ::libc::c_uint = 3;
pub const COLOR_MODEL_CMY: ::libc::c_uint = 4;
pub const COLOR_MODEL_KCMY: ::libc::c_uint = 5;
pub const COLOR_MODEL_CMY_K: ::libc::c_uint = 6;
pub const COLOR_MODEL_BLACK: ::libc::c_uint = 7;
pub const COLOR_MODEL_GRAYSCALE: ::libc::c_uint = 8;
pub const COLOR_MODEL_RGB: ::libc::c_uint = 9;
pub const COLOR_MODEL_RGB16: ::libc::c_uint = 10;
pub const COLOR_MODEL_RGBA: ::libc::c_uint = 11;
pub const COLOR_MODEL_COLORMODE_COLOR: ::libc::c_uint = 12;
pub const COLOR_MODEL_COLORMODE_MONOCHROME: ::libc::c_uint = 13;
pub const COLOR_MODEL_HP_COLOR_COLOR: ::libc::c_uint = 14;
pub const COLOR_MODEL_HP_COLOR_BLACK: ::libc::c_uint = 15;
pub const COLOR_MODEL_PRINTOUTMODE_NORMAL: ::libc::c_uint = 16;
pub const COLOR_MODEL_PRINTOUTMODE_NORMAL_GRAY: ::libc::c_uint = 17;
pub const COLOR_MODEL_PROCESSCOLORMODEL_CMYK: ::libc::c_uint = 18;
pub const COLOR_MODEL_PROCESSCOLORMODEL_GREYSCALE: ::libc::c_uint = 19;
pub const COLOR_MODEL_PROCESSCOLORMODEL_RGB: ::libc::c_uint = 20;
pub type cef_color_model_t = Enum_Unnamed39;
pub type Enum_Unnamed40 = ::libc::c_int;
pub const DUPLEX_MODE_UNKNOWN: ::libc::c_int = -1;
pub const DUPLEX_MODE_SIMPLEX: ::libc::c_int = 0;
pub const DUPLEX_MODE_LONG_EDGE: ::libc::c_int = 1;
pub const DUPLEX_MODE_SHORT_EDGE: ::libc::c_int = 2;
pub type cef_duplex_mode_t = Enum_Unnamed40;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_page_range_t {
    pub from: ::libc::c_int,
    pub to: ::libc::c_int,
}
impl ::std::default::Default for Struct__cef_page_range_t {
    fn default() -> Struct__cef_page_range_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_page_range_t = Struct__cef_page_range_t;
pub type Enum_Unnamed41 = ::libc::c_uint;
pub const CT_POINTER: ::libc::c_uint = 0;
pub const CT_CROSS: ::libc::c_uint = 1;
pub const CT_HAND: ::libc::c_uint = 2;
pub const CT_IBEAM: ::libc::c_uint = 3;
pub const CT_WAIT: ::libc::c_uint = 4;
pub const CT_HELP: ::libc::c_uint = 5;
pub const CT_EASTRESIZE: ::libc::c_uint = 6;
pub const CT_NORTHRESIZE: ::libc::c_uint = 7;
pub const CT_NORTHEASTRESIZE: ::libc::c_uint = 8;
pub const CT_NORTHWESTRESIZE: ::libc::c_uint = 9;
pub const CT_SOUTHRESIZE: ::libc::c_uint = 10;
pub const CT_SOUTHEASTRESIZE: ::libc::c_uint = 11;
pub const CT_SOUTHWESTRESIZE: ::libc::c_uint = 12;
pub const CT_WESTRESIZE: ::libc::c_uint = 13;
pub const CT_NORTHSOUTHRESIZE: ::libc::c_uint = 14;
pub const CT_EASTWESTRESIZE: ::libc::c_uint = 15;
pub const CT_NORTHEASTSOUTHWESTRESIZE: ::libc::c_uint = 16;
pub const CT_NORTHWESTSOUTHEASTRESIZE: ::libc::c_uint = 17;
pub const CT_COLUMNRESIZE: ::libc::c_uint = 18;
pub const CT_ROWRESIZE: ::libc::c_uint = 19;
pub const CT_MIDDLEPANNING: ::libc::c_uint = 20;
pub const CT_EASTPANNING: ::libc::c_uint = 21;
pub const CT_NORTHPANNING: ::libc::c_uint = 22;
pub const CT_NORTHEASTPANNING: ::libc::c_uint = 23;
pub const CT_NORTHWESTPANNING: ::libc::c_uint = 24;
pub const CT_SOUTHPANNING: ::libc::c_uint = 25;
pub const CT_SOUTHEASTPANNING: ::libc::c_uint = 26;
pub const CT_SOUTHWESTPANNING: ::libc::c_uint = 27;
pub const CT_WESTPANNING: ::libc::c_uint = 28;
pub const CT_MOVE: ::libc::c_uint = 29;
pub const CT_VERTICALTEXT: ::libc::c_uint = 30;
pub const CT_CELL: ::libc::c_uint = 31;
pub const CT_CONTEXTMENU: ::libc::c_uint = 32;
pub const CT_ALIAS: ::libc::c_uint = 33;
pub const CT_PROGRESS: ::libc::c_uint = 34;
pub const CT_NODROP: ::libc::c_uint = 35;
pub const CT_COPY: ::libc::c_uint = 36;
pub const CT_NONE: ::libc::c_uint = 37;
pub const CT_NOTALLOWED: ::libc::c_uint = 38;
pub const CT_ZOOMIN: ::libc::c_uint = 39;
pub const CT_ZOOMOUT: ::libc::c_uint = 40;
pub const CT_GRAB: ::libc::c_uint = 41;
pub const CT_GRABBING: ::libc::c_uint = 42;
pub const CT_CUSTOM: ::libc::c_uint = 43;
pub type cef_cursor_type_t = Enum_Unnamed41;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_cursor_info_t {
    pub hotspot: cef_point_t,
    pub image_scale_factor: ::libc::c_float,
    pub buffer: *mut ::libc::c_void,
    pub size: cef_size_t,
}
impl ::std::default::Default for Struct__cef_cursor_info_t {
    fn default() -> Struct__cef_cursor_info_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_cursor_info_t = Struct__cef_cursor_info_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_base_t {
    pub size: size_t,
    pub add_ref: ::std::option::Option<extern "C" fn
                                           (_self: *mut Struct__cef_base_t)
                                           -> ()>,
    pub release: ::std::option::Option<extern "C" fn
                                           (_self: *mut Struct__cef_base_t)
                                           -> ::libc::c_int>,
    pub has_one_ref: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_base_t)
                                               -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_base_t {
    fn default() -> Struct__cef_base_t { unsafe { ::std::mem::zeroed() } }
}
pub type cef_base_t = Struct__cef_base_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_command_line_t {
    pub base: cef_base_t,
    pub is_valid: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_command_line_t)
                                            -> ::libc::c_int>,
    pub is_read_only: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_command_line_t)
                                                -> ::libc::c_int>,
    pub copy: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_command_line_t)
                                        -> *mut Struct__cef_command_line_t>,
    pub init_from_argv: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_command_line_t,
                                                   argc: ::libc::c_int,
                                                   argv:
                                                       *const *const ::libc::c_char)
                                                  -> ()>,
    pub init_from_string: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_command_line_t,
                                                     command_line:
                                                         *const cef_string_t)
                                                    -> ()>,
    pub reset: ::std::option::Option<extern "C" fn
                                         (_self:
                                              *mut Struct__cef_command_line_t)
                                         -> ()>,
    pub get_argv: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_command_line_t,
                                             argv: cef_string_list_t) -> ()>,
    pub get_command_line_string: ::std::option::Option<extern "C" fn
                                                           (_self:
                                                                *mut Struct__cef_command_line_t)
                                                           ->
                                                               cef_string_userfree_t>,
    pub get_program: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_command_line_t)
                                               -> cef_string_userfree_t>,
    pub set_program: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_command_line_t,
                                                program: *const cef_string_t)
                                               -> ()>,
    pub has_switches: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_command_line_t)
                                                -> ::libc::c_int>,
    pub has_switch: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_command_line_t,
                                               name: *const cef_string_t)
                                              -> ::libc::c_int>,
    pub get_switch_value: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_command_line_t,
                                                     name:
                                                         *const cef_string_t)
                                                    -> cef_string_userfree_t>,
    pub get_switches: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_command_line_t,
                                                 switches: cef_string_map_t)
                                                -> ()>,
    pub append_switch: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_command_line_t,
                                                  name: *const cef_string_t)
                                                 -> ()>,
    pub append_switch_with_value: ::std::option::Option<extern "C" fn
                                                            (_self:
                                                                 *mut Struct__cef_command_line_t,
                                                             name:
                                                                 *const cef_string_t,
                                                             value:
                                                                 *const cef_string_t)
                                                            -> ()>,
    pub has_arguments: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_command_line_t)
                                                 -> ::libc::c_int>,
    pub get_arguments: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_command_line_t,
                                                  arguments:
                                                      cef_string_list_t)
                                                 -> ()>,
    pub append_argument: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_command_line_t,
                                                    argument:
                                                        *const cef_string_t)
                                                   -> ()>,
    pub prepend_wrapper: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_command_line_t,
                                                    wrapper:
                                                        *const cef_string_t)
                                                   -> ()>,
}
impl ::std::default::Default for Struct__cef_command_line_t {
    fn default() -> Struct__cef_command_line_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_command_line_t = Struct__cef_command_line_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_read_handler_t {
    pub base: cef_base_t,
    pub read: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_read_handler_t,
                                         ptr: *mut ::libc::c_void,
                                         size: size_t, n: size_t) -> size_t>,
    pub seek: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_read_handler_t,
                                         offset: int64, whence: ::libc::c_int)
                                        -> ::libc::c_int>,
    pub tell: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_read_handler_t)
                                        -> int64>,
    pub eof: ::std::option::Option<extern "C" fn
                                       (_self:
                                            *mut Struct__cef_read_handler_t)
                                       -> ::libc::c_int>,
    pub may_block: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_read_handler_t)
                                             -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_read_handler_t {
    fn default() -> Struct__cef_read_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_read_handler_t = Struct__cef_read_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_stream_reader_t {
    pub base: cef_base_t,
    pub read: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_stream_reader_t,
                                         ptr: *mut ::libc::c_void,
                                         size: size_t, n: size_t) -> size_t>,
    pub seek: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_stream_reader_t,
                                         offset: int64, whence: ::libc::c_int)
                                        -> ::libc::c_int>,
    pub tell: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_stream_reader_t)
                                        -> int64>,
    pub eof: ::std::option::Option<extern "C" fn
                                       (_self:
                                            *mut Struct__cef_stream_reader_t)
                                       -> ::libc::c_int>,
    pub may_block: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_stream_reader_t)
                                             -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_stream_reader_t {
    fn default() -> Struct__cef_stream_reader_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_stream_reader_t = Struct__cef_stream_reader_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_write_handler_t {
    pub base: cef_base_t,
    pub write: ::std::option::Option<extern "C" fn
                                         (_self:
                                              *mut Struct__cef_write_handler_t,
                                          ptr: *const ::libc::c_void,
                                          size: size_t, n: size_t) -> size_t>,
    pub seek: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_write_handler_t,
                                         offset: int64, whence: ::libc::c_int)
                                        -> ::libc::c_int>,
    pub tell: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_write_handler_t)
                                        -> int64>,
    pub flush: ::std::option::Option<extern "C" fn
                                         (_self:
                                              *mut Struct__cef_write_handler_t)
                                         -> ::libc::c_int>,
    pub may_block: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_write_handler_t)
                                             -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_write_handler_t {
    fn default() -> Struct__cef_write_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_write_handler_t = Struct__cef_write_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_stream_writer_t {
    pub base: cef_base_t,
    pub write: ::std::option::Option<extern "C" fn
                                         (_self:
                                              *mut Struct__cef_stream_writer_t,
                                          ptr: *const ::libc::c_void,
                                          size: size_t, n: size_t) -> size_t>,
    pub seek: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_stream_writer_t,
                                         offset: int64, whence: ::libc::c_int)
                                        -> ::libc::c_int>,
    pub tell: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_stream_writer_t)
                                        -> int64>,
    pub flush: ::std::option::Option<extern "C" fn
                                         (_self:
                                              *mut Struct__cef_stream_writer_t)
                                         -> ::libc::c_int>,
    pub may_block: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_stream_writer_t)
                                             -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_stream_writer_t {
    fn default() -> Struct__cef_stream_writer_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_stream_writer_t = Struct__cef_stream_writer_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_drag_data_t {
    pub base: cef_base_t,
    pub clone: ::std::option::Option<extern "C" fn
                                         (_self: *mut Struct__cef_drag_data_t)
                                         -> *mut Struct__cef_drag_data_t>,
    pub is_read_only: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_drag_data_t)
                                                -> ::libc::c_int>,
    pub is_link: ::std::option::Option<extern "C" fn
                                           (_self:
                                                *mut Struct__cef_drag_data_t)
                                           -> ::libc::c_int>,
    pub is_fragment: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_drag_data_t)
                                               -> ::libc::c_int>,
    pub is_file: ::std::option::Option<extern "C" fn
                                           (_self:
                                                *mut Struct__cef_drag_data_t)
                                           -> ::libc::c_int>,
    pub get_link_url: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_drag_data_t)
                                                -> cef_string_userfree_t>,
    pub get_link_title: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_drag_data_t)
                                                  -> cef_string_userfree_t>,
    pub get_link_metadata: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_drag_data_t)
                                                     ->
                                                         cef_string_userfree_t>,
    pub get_fragment_text: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_drag_data_t)
                                                     ->
                                                         cef_string_userfree_t>,
    pub get_fragment_html: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_drag_data_t)
                                                     ->
                                                         cef_string_userfree_t>,
    pub get_fragment_base_url: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_drag_data_t)
                                                         ->
                                                             cef_string_userfree_t>,
    pub get_file_name: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_drag_data_t)
                                                 -> cef_string_userfree_t>,
    pub get_file_contents: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_drag_data_t,
                                                      writer:
                                                          *mut Struct__cef_stream_writer_t)
                                                     -> size_t>,
    pub get_file_names: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_drag_data_t,
                                                   names: cef_string_list_t)
                                                  -> ::libc::c_int>,
    pub set_link_url: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_drag_data_t,
                                                 url: *const cef_string_t)
                                                -> ()>,
    pub set_link_title: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_drag_data_t,
                                                   title: *const cef_string_t)
                                                  -> ()>,
    pub set_link_metadata: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_drag_data_t,
                                                      data:
                                                          *const cef_string_t)
                                                     -> ()>,
    pub set_fragment_text: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_drag_data_t,
                                                      text:
                                                          *const cef_string_t)
                                                     -> ()>,
    pub set_fragment_html: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_drag_data_t,
                                                      html:
                                                          *const cef_string_t)
                                                     -> ()>,
    pub set_fragment_base_url: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_drag_data_t,
                                                          base_url:
                                                              *const cef_string_t)
                                                         -> ()>,
    pub reset_file_contents: ::std::option::Option<extern "C" fn
                                                       (_self:
                                                            *mut Struct__cef_drag_data_t)
                                                       -> ()>,
    pub add_file: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_drag_data_t,
                                             path: *const cef_string_t,
                                             display_name:
                                                 *const cef_string_t) -> ()>,
}
impl ::std::default::Default for Struct__cef_drag_data_t {
    fn default() -> Struct__cef_drag_data_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_drag_data_t = Struct__cef_drag_data_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_domvisitor_t {
    pub base: cef_base_t,
    pub visit: ::std::option::Option<extern "C" fn
                                         (_self:
                                              *mut Struct__cef_domvisitor_t,
                                          document:
                                              *mut Struct__cef_domdocument_t)
                                         -> ()>,
}
impl ::std::default::Default for Struct__cef_domvisitor_t {
    fn default() -> Struct__cef_domvisitor_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_domvisitor_t = Struct__cef_domvisitor_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_domdocument_t {
    pub base: cef_base_t,
    pub get_type: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_domdocument_t)
                                            -> cef_dom_document_type_t>,
    pub get_document: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_domdocument_t)
                                                ->
                                                    *mut Struct__cef_domnode_t>,
    pub get_body: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_domdocument_t)
                                            -> *mut Struct__cef_domnode_t>,
    pub get_head: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_domdocument_t)
                                            -> *mut Struct__cef_domnode_t>,
    pub get_title: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_domdocument_t)
                                             -> cef_string_userfree_t>,
    pub get_element_by_id: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_domdocument_t,
                                                      id: *const cef_string_t)
                                                     ->
                                                         *mut Struct__cef_domnode_t>,
    pub get_focused_node: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_domdocument_t)
                                                    ->
                                                        *mut Struct__cef_domnode_t>,
    pub has_selection: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_domdocument_t)
                                                 -> ::libc::c_int>,
    pub get_selection_start_offset: ::std::option::Option<extern "C" fn
                                                              (_self:
                                                                   *mut Struct__cef_domdocument_t)
                                                              ->
                                                                  ::libc::c_int>,
    pub get_selection_end_offset: ::std::option::Option<extern "C" fn
                                                            (_self:
                                                                 *mut Struct__cef_domdocument_t)
                                                            -> ::libc::c_int>,
    pub get_selection_as_markup: ::std::option::Option<extern "C" fn
                                                           (_self:
                                                                *mut Struct__cef_domdocument_t)
                                                           ->
                                                               cef_string_userfree_t>,
    pub get_selection_as_text: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_domdocument_t)
                                                         ->
                                                             cef_string_userfree_t>,
    pub get_base_url: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_domdocument_t)
                                                -> cef_string_userfree_t>,
    pub get_complete_url: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_domdocument_t,
                                                     partialURL:
                                                         *const cef_string_t)
                                                    -> cef_string_userfree_t>,
}
impl ::std::default::Default for Struct__cef_domdocument_t {
    fn default() -> Struct__cef_domdocument_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_domdocument_t = Struct__cef_domdocument_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_domnode_t {
    pub base: cef_base_t,
    pub get_type: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_domnode_t)
                                            -> cef_dom_node_type_t>,
    pub is_text: ::std::option::Option<extern "C" fn
                                           (_self: *mut Struct__cef_domnode_t)
                                           -> ::libc::c_int>,
    pub is_element: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_domnode_t)
                                              -> ::libc::c_int>,
    pub is_editable: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_domnode_t)
                                               -> ::libc::c_int>,
    pub is_form_control_element: ::std::option::Option<extern "C" fn
                                                           (_self:
                                                                *mut Struct__cef_domnode_t)
                                                           -> ::libc::c_int>,
    pub get_form_control_element_type: ::std::option::Option<extern "C" fn
                                                                 (_self:
                                                                      *mut Struct__cef_domnode_t)
                                                                 ->
                                                                     cef_string_userfree_t>,
    pub is_same: ::std::option::Option<extern "C" fn
                                           (_self: *mut Struct__cef_domnode_t,
                                            that: *mut Struct__cef_domnode_t)
                                           -> ::libc::c_int>,
    pub get_name: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_domnode_t)
                                            -> cef_string_userfree_t>,
    pub get_value: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_domnode_t)
                                             -> cef_string_userfree_t>,
    pub set_value: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_domnode_t,
                                              value: *const cef_string_t)
                                             -> ::libc::c_int>,
    pub get_as_markup: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_domnode_t)
                                                 -> cef_string_userfree_t>,
    pub get_document: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_domnode_t)
                                                ->
                                                    *mut Struct__cef_domdocument_t>,
    pub get_parent: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_domnode_t)
                                              -> *mut Struct__cef_domnode_t>,
    pub get_previous_sibling: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_domnode_t)
                                                        ->
                                                            *mut Struct__cef_domnode_t>,
    pub get_next_sibling: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_domnode_t)
                                                    ->
                                                        *mut Struct__cef_domnode_t>,
    pub has_children: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_domnode_t)
                                                -> ::libc::c_int>,
    pub get_first_child: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_domnode_t)
                                                   ->
                                                       *mut Struct__cef_domnode_t>,
    pub get_last_child: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_domnode_t)
                                                  ->
                                                      *mut Struct__cef_domnode_t>,
    pub get_element_tag_name: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_domnode_t)
                                                        ->
                                                            cef_string_userfree_t>,
    pub has_element_attributes: ::std::option::Option<extern "C" fn
                                                          (_self:
                                                               *mut Struct__cef_domnode_t)
                                                          -> ::libc::c_int>,
    pub has_element_attribute: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_domnode_t,
                                                          attrName:
                                                              *const cef_string_t)
                                                         -> ::libc::c_int>,
    pub get_element_attribute: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_domnode_t,
                                                          attrName:
                                                              *const cef_string_t)
                                                         ->
                                                             cef_string_userfree_t>,
    pub get_element_attributes: ::std::option::Option<extern "C" fn
                                                          (_self:
                                                               *mut Struct__cef_domnode_t,
                                                           attrMap:
                                                               cef_string_map_t)
                                                          -> ()>,
    pub set_element_attribute: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_domnode_t,
                                                          attrName:
                                                              *const cef_string_t,
                                                          value:
                                                              *const cef_string_t)
                                                         -> ::libc::c_int>,
    pub get_element_inner_text: ::std::option::Option<extern "C" fn
                                                          (_self:
                                                               *mut Struct__cef_domnode_t)
                                                          ->
                                                              cef_string_userfree_t>,
}
impl ::std::default::Default for Struct__cef_domnode_t {
    fn default() -> Struct__cef_domnode_t { unsafe { ::std::mem::zeroed() } }
}
pub type cef_domnode_t = Struct__cef_domnode_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_request_t {
    pub base: cef_base_t,
    pub is_read_only: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_request_t)
                                                -> ::libc::c_int>,
    pub get_url: ::std::option::Option<extern "C" fn
                                           (_self: *mut Struct__cef_request_t)
                                           -> cef_string_userfree_t>,
    pub set_url: ::std::option::Option<extern "C" fn
                                           (_self: *mut Struct__cef_request_t,
                                            url: *const cef_string_t) -> ()>,
    pub get_method: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_request_t)
                                              -> cef_string_userfree_t>,
    pub set_method: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_request_t,
                                               method: *const cef_string_t)
                                              -> ()>,
    pub get_post_data: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_request_t)
                                                 ->
                                                     *mut Struct__cef_post_data_t>,
    pub set_post_data: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_request_t,
                                                  postData:
                                                      *mut Struct__cef_post_data_t)
                                                 -> ()>,
    pub get_header_map: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_request_t,
                                                   headerMap:
                                                       cef_string_multimap_t)
                                                  -> ()>,
    pub set_header_map: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_request_t,
                                                   headerMap:
                                                       cef_string_multimap_t)
                                                  -> ()>,
    pub set: ::std::option::Option<extern "C" fn
                                       (_self: *mut Struct__cef_request_t,
                                        url: *const cef_string_t,
                                        method: *const cef_string_t,
                                        postData:
                                            *mut Struct__cef_post_data_t,
                                        headerMap: cef_string_multimap_t)
                                       -> ()>,
    pub get_flags: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_request_t)
                                             -> ::libc::c_int>,
    pub set_flags: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_request_t,
                                              flags: ::libc::c_int) -> ()>,
    pub get_first_party_for_cookies: ::std::option::Option<extern "C" fn
                                                               (_self:
                                                                    *mut Struct__cef_request_t)
                                                               ->
                                                                   cef_string_userfree_t>,
    pub set_first_party_for_cookies: ::std::option::Option<extern "C" fn
                                                               (_self:
                                                                    *mut Struct__cef_request_t,
                                                                url:
                                                                    *const cef_string_t)
                                                               -> ()>,
    pub get_resource_type: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_request_t)
                                                     -> cef_resource_type_t>,
    pub get_transition_type: ::std::option::Option<extern "C" fn
                                                       (_self:
                                                            *mut Struct__cef_request_t)
                                                       ->
                                                           cef_transition_type_t>,
}
impl ::std::default::Default for Struct__cef_request_t {
    fn default() -> Struct__cef_request_t { unsafe { ::std::mem::zeroed() } }
}
pub type cef_request_t = Struct__cef_request_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_post_data_t {
    pub base: cef_base_t,
    pub is_read_only: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_post_data_t)
                                                -> ::libc::c_int>,
    pub get_element_count: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_post_data_t)
                                                     -> size_t>,
    pub get_elements: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_post_data_t,
                                                 elementsCount: *mut size_t,
                                                 elements:
                                                     *mut *mut Struct__cef_post_data_element_t)
                                                -> ()>,
    pub remove_element: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_post_data_t,
                                                   element:
                                                       *mut Struct__cef_post_data_element_t)
                                                  -> ::libc::c_int>,
    pub add_element: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_post_data_t,
                                                element:
                                                    *mut Struct__cef_post_data_element_t)
                                               -> ::libc::c_int>,
    pub remove_elements: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_post_data_t)
                                                   -> ()>,
}
impl ::std::default::Default for Struct__cef_post_data_t {
    fn default() -> Struct__cef_post_data_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_post_data_t = Struct__cef_post_data_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_post_data_element_t {
    pub base: cef_base_t,
    pub is_read_only: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_post_data_element_t)
                                                -> ::libc::c_int>,
    pub set_to_empty: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_post_data_element_t)
                                                -> ()>,
    pub set_to_file: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_post_data_element_t,
                                                fileName: *const cef_string_t)
                                               -> ()>,
    pub set_to_bytes: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_post_data_element_t,
                                                 size: size_t,
                                                 bytes: *const ::libc::c_void)
                                                -> ()>,
    pub get_type: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_post_data_element_t)
                                            -> cef_postdataelement_type_t>,
    pub get_file: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_post_data_element_t)
                                            -> cef_string_userfree_t>,
    pub get_bytes_count: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_post_data_element_t)
                                                   -> size_t>,
    pub get_bytes: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_post_data_element_t,
                                              size: size_t,
                                              bytes: *mut ::libc::c_void)
                                             -> size_t>,
}
impl ::std::default::Default for Struct__cef_post_data_element_t {
    fn default() -> Struct__cef_post_data_element_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_post_data_element_t = Struct__cef_post_data_element_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_string_visitor_t {
    pub base: cef_base_t,
    pub visit: ::std::option::Option<extern "C" fn
                                         (_self:
                                              *mut Struct__cef_string_visitor_t,
                                          string: *const cef_string_t) -> ()>,
}
impl ::std::default::Default for Struct__cef_string_visitor_t {
    fn default() -> Struct__cef_string_visitor_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_string_visitor_t = Struct__cef_string_visitor_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_frame_t {
    pub base: cef_base_t,
    pub is_valid: ::std::option::Option<extern "C" fn
                                            (_self: *mut Struct__cef_frame_t)
                                            -> ::libc::c_int>,
    pub undo: ::std::option::Option<extern "C" fn
                                        (_self: *mut Struct__cef_frame_t)
                                        -> ()>,
    pub redo: ::std::option::Option<extern "C" fn
                                        (_self: *mut Struct__cef_frame_t)
                                        -> ()>,
    pub cut: ::std::option::Option<extern "C" fn
                                       (_self: *mut Struct__cef_frame_t)
                                       -> ()>,
    pub copy: ::std::option::Option<extern "C" fn
                                        (_self: *mut Struct__cef_frame_t)
                                        -> ()>,
    pub paste: ::std::option::Option<extern "C" fn
                                         (_self: *mut Struct__cef_frame_t)
                                         -> ()>,
    pub del: ::std::option::Option<extern "C" fn
                                       (_self: *mut Struct__cef_frame_t)
                                       -> ()>,
    pub select_all: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_frame_t)
                                              -> ()>,
    pub view_source: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_frame_t)
                                               -> ()>,
    pub get_source: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_frame_t,
                                               visitor:
                                                   *mut Struct__cef_string_visitor_t)
                                              -> ()>,
    pub get_text: ::std::option::Option<extern "C" fn
                                            (_self: *mut Struct__cef_frame_t,
                                             visitor:
                                                 *mut Struct__cef_string_visitor_t)
                                            -> ()>,
    pub load_request: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_frame_t,
                                                 request:
                                                     *mut Struct__cef_request_t)
                                                -> ()>,
    pub load_url: ::std::option::Option<extern "C" fn
                                            (_self: *mut Struct__cef_frame_t,
                                             url: *const cef_string_t) -> ()>,
    pub load_string: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_frame_t,
                                                string_val:
                                                    *const cef_string_t,
                                                url: *const cef_string_t)
                                               -> ()>,
    pub execute_java_script: ::std::option::Option<extern "C" fn
                                                       (_self:
                                                            *mut Struct__cef_frame_t,
                                                        code:
                                                            *const cef_string_t,
                                                        script_url:
                                                            *const cef_string_t,
                                                        start_line:
                                                            ::libc::c_int)
                                                       -> ()>,
    pub is_main: ::std::option::Option<extern "C" fn
                                           (_self: *mut Struct__cef_frame_t)
                                           -> ::libc::c_int>,
    pub is_focused: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_frame_t)
                                              -> ::libc::c_int>,
    pub get_name: ::std::option::Option<extern "C" fn
                                            (_self: *mut Struct__cef_frame_t)
                                            -> cef_string_userfree_t>,
    pub get_identifier: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_frame_t)
                                                  -> int64>,
    pub get_parent: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_frame_t)
                                              -> *mut Struct__cef_frame_t>,
    pub get_url: ::std::option::Option<extern "C" fn
                                           (_self: *mut Struct__cef_frame_t)
                                           -> cef_string_userfree_t>,
    pub get_browser: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_frame_t)
                                               -> *mut Struct__cef_browser_t>,
    pub get_v8context: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_frame_t)
                                                 ->
                                                     *mut Struct__cef_v8context_t>,
    pub visit_dom: ::std::option::Option<extern "C" fn
                                             (_self: *mut Struct__cef_frame_t,
                                              visitor:
                                                  *mut Struct__cef_domvisitor_t)
                                             -> ()>,
}
impl ::std::default::Default for Struct__cef_frame_t {
    fn default() -> Struct__cef_frame_t { unsafe { ::std::mem::zeroed() } }
}
pub type cef_frame_t = Struct__cef_frame_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_navigation_entry_t {
    pub base: cef_base_t,
    pub is_valid: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_navigation_entry_t)
                                            -> ::libc::c_int>,
    pub get_url: ::std::option::Option<extern "C" fn
                                           (_self:
                                                *mut Struct__cef_navigation_entry_t)
                                           -> cef_string_userfree_t>,
    pub get_display_url: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_navigation_entry_t)
                                                   -> cef_string_userfree_t>,
    pub get_original_url: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_navigation_entry_t)
                                                    -> cef_string_userfree_t>,
    pub get_title: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_navigation_entry_t)
                                             -> cef_string_userfree_t>,
    pub get_transition_type: ::std::option::Option<extern "C" fn
                                                       (_self:
                                                            *mut Struct__cef_navigation_entry_t)
                                                       ->
                                                           cef_transition_type_t>,
    pub has_post_data: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_navigation_entry_t)
                                                 -> ::libc::c_int>,
    pub get_frame_name: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_navigation_entry_t)
                                                  -> cef_string_userfree_t>,
    pub get_completion_time: ::std::option::Option<extern "C" fn
                                                       (_self:
                                                            *mut Struct__cef_navigation_entry_t)
                                                       -> cef_time_t>,
    pub get_http_status_code: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_navigation_entry_t)
                                                        -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_navigation_entry_t {
    fn default() -> Struct__cef_navigation_entry_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_navigation_entry_t = Struct__cef_navigation_entry_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_binary_value_t {
    pub base: cef_base_t,
    pub is_valid: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_binary_value_t)
                                            -> ::libc::c_int>,
    pub is_owned: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_binary_value_t)
                                            -> ::libc::c_int>,
    pub copy: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_binary_value_t)
                                        -> *mut Struct__cef_binary_value_t>,
    pub get_size: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_binary_value_t)
                                            -> size_t>,
    pub get_data: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_binary_value_t,
                                             buffer: *mut ::libc::c_void,
                                             buffer_size: size_t,
                                             data_offset: size_t) -> size_t>,
}
impl ::std::default::Default for Struct__cef_binary_value_t {
    fn default() -> Struct__cef_binary_value_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_binary_value_t = Struct__cef_binary_value_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_dictionary_value_t {
    pub base: cef_base_t,
    pub is_valid: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_dictionary_value_t)
                                            -> ::libc::c_int>,
    pub is_owned: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_dictionary_value_t)
                                            -> ::libc::c_int>,
    pub is_read_only: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_dictionary_value_t)
                                                -> ::libc::c_int>,
    pub copy: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_dictionary_value_t,
                                         exclude_empty_children:
                                             ::libc::c_int)
                                        ->
                                            *mut Struct__cef_dictionary_value_t>,
    pub get_size: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_dictionary_value_t)
                                            -> size_t>,
    pub clear: ::std::option::Option<extern "C" fn
                                         (_self:
                                              *mut Struct__cef_dictionary_value_t)
                                         -> ::libc::c_int>,
    pub has_key: ::std::option::Option<extern "C" fn
                                           (_self:
                                                *mut Struct__cef_dictionary_value_t,
                                            key: *const cef_string_t)
                                           -> ::libc::c_int>,
    pub get_keys: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_dictionary_value_t,
                                             keys: cef_string_list_t)
                                            -> ::libc::c_int>,
    pub remove: ::std::option::Option<extern "C" fn
                                          (_self:
                                               *mut Struct__cef_dictionary_value_t,
                                           key: *const cef_string_t)
                                          -> ::libc::c_int>,
    pub get_type: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_dictionary_value_t,
                                             key: *const cef_string_t)
                                            -> cef_value_type_t>,
    pub get_bool: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_dictionary_value_t,
                                             key: *const cef_string_t)
                                            -> ::libc::c_int>,
    pub get_int: ::std::option::Option<extern "C" fn
                                           (_self:
                                                *mut Struct__cef_dictionary_value_t,
                                            key: *const cef_string_t)
                                           -> ::libc::c_int>,
    pub get_double: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_dictionary_value_t,
                                               key: *const cef_string_t)
                                              -> ::libc::c_double>,
    pub get_string: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_dictionary_value_t,
                                               key: *const cef_string_t)
                                              -> cef_string_userfree_t>,
    pub get_binary: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_dictionary_value_t,
                                               key: *const cef_string_t)
                                              ->
                                                  *mut Struct__cef_binary_value_t>,
    pub get_dictionary: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_dictionary_value_t,
                                                   key: *const cef_string_t)
                                                  ->
                                                      *mut Struct__cef_dictionary_value_t>,
    pub get_list: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_dictionary_value_t,
                                             key: *const cef_string_t)
                                            -> *mut Struct__cef_list_value_t>,
    pub set_null: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_dictionary_value_t,
                                             key: *const cef_string_t)
                                            -> ::libc::c_int>,
    pub set_bool: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_dictionary_value_t,
                                             key: *const cef_string_t,
                                             value: ::libc::c_int)
                                            -> ::libc::c_int>,
    pub set_int: ::std::option::Option<extern "C" fn
                                           (_self:
                                                *mut Struct__cef_dictionary_value_t,
                                            key: *const cef_string_t,
                                            value: ::libc::c_int)
                                           -> ::libc::c_int>,
    pub set_double: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_dictionary_value_t,
                                               key: *const cef_string_t,
                                               value: ::libc::c_double)
                                              -> ::libc::c_int>,
    pub set_string: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_dictionary_value_t,
                                               key: *const cef_string_t,
                                               value: *const cef_string_t)
                                              -> ::libc::c_int>,
    pub set_binary: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_dictionary_value_t,
                                               key: *const cef_string_t,
                                               value:
                                                   *mut Struct__cef_binary_value_t)
                                              -> ::libc::c_int>,
    pub set_dictionary: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_dictionary_value_t,
                                                   key: *const cef_string_t,
                                                   value:
                                                       *mut Struct__cef_dictionary_value_t)
                                                  -> ::libc::c_int>,
    pub set_list: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_dictionary_value_t,
                                             key: *const cef_string_t,
                                             value:
                                                 *mut Struct__cef_list_value_t)
                                            -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_dictionary_value_t {
    fn default() -> Struct__cef_dictionary_value_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_dictionary_value_t = Struct__cef_dictionary_value_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_list_value_t {
    pub base: cef_base_t,
    pub is_valid: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_list_value_t)
                                            -> ::libc::c_int>,
    pub is_owned: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_list_value_t)
                                            -> ::libc::c_int>,
    pub is_read_only: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_list_value_t)
                                                -> ::libc::c_int>,
    pub copy: ::std::option::Option<extern "C" fn
                                        (_self: *mut Struct__cef_list_value_t)
                                        -> *mut Struct__cef_list_value_t>,
    pub set_size: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_list_value_t,
                                             size: size_t) -> ::libc::c_int>,
    pub get_size: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_list_value_t)
                                            -> size_t>,
    pub clear: ::std::option::Option<extern "C" fn
                                         (_self:
                                              *mut Struct__cef_list_value_t)
                                         -> ::libc::c_int>,
    pub remove: ::std::option::Option<extern "C" fn
                                          (_self:
                                               *mut Struct__cef_list_value_t,
                                           index: ::libc::c_int)
                                          -> ::libc::c_int>,
    pub get_type: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_list_value_t,
                                             index: ::libc::c_int)
                                            -> cef_value_type_t>,
    pub get_bool: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_list_value_t,
                                             index: ::libc::c_int)
                                            -> ::libc::c_int>,
    pub get_int: ::std::option::Option<extern "C" fn
                                           (_self:
                                                *mut Struct__cef_list_value_t,
                                            index: ::libc::c_int)
                                           -> ::libc::c_int>,
    pub get_double: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_list_value_t,
                                               index: ::libc::c_int)
                                              -> ::libc::c_double>,
    pub get_string: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_list_value_t,
                                               index: ::libc::c_int)
                                              -> cef_string_userfree_t>,
    pub get_binary: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_list_value_t,
                                               index: ::libc::c_int)
                                              ->
                                                  *mut Struct__cef_binary_value_t>,
    pub get_dictionary: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_list_value_t,
                                                   index: ::libc::c_int)
                                                  ->
                                                      *mut Struct__cef_dictionary_value_t>,
    pub get_list: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_list_value_t,
                                             index: ::libc::c_int)
                                            -> *mut Struct__cef_list_value_t>,
    pub set_null: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_list_value_t,
                                             index: ::libc::c_int)
                                            -> ::libc::c_int>,
    pub set_bool: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_list_value_t,
                                             index: ::libc::c_int,
                                             value: ::libc::c_int)
                                            -> ::libc::c_int>,
    pub set_int: ::std::option::Option<extern "C" fn
                                           (_self:
                                                *mut Struct__cef_list_value_t,
                                            index: ::libc::c_int,
                                            value: ::libc::c_int)
                                           -> ::libc::c_int>,
    pub set_double: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_list_value_t,
                                               index: ::libc::c_int,
                                               value: ::libc::c_double)
                                              -> ::libc::c_int>,
    pub set_string: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_list_value_t,
                                               index: ::libc::c_int,
                                               value: *const cef_string_t)
                                              -> ::libc::c_int>,
    pub set_binary: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_list_value_t,
                                               index: ::libc::c_int,
                                               value:
                                                   *mut Struct__cef_binary_value_t)
                                              -> ::libc::c_int>,
    pub set_dictionary: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_list_value_t,
                                                   index: ::libc::c_int,
                                                   value:
                                                       *mut Struct__cef_dictionary_value_t)
                                                  -> ::libc::c_int>,
    pub set_list: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_list_value_t,
                                             index: ::libc::c_int,
                                             value:
                                                 *mut Struct__cef_list_value_t)
                                            -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_list_value_t {
    fn default() -> Struct__cef_list_value_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_list_value_t = Struct__cef_list_value_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_process_message_t {
    pub base: cef_base_t,
    pub is_valid: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_process_message_t)
                                            -> ::libc::c_int>,
    pub is_read_only: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_process_message_t)
                                                -> ::libc::c_int>,
    pub copy: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_process_message_t)
                                        ->
                                            *mut Struct__cef_process_message_t>,
    pub get_name: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_process_message_t)
                                            -> cef_string_userfree_t>,
    pub get_argument_list: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_process_message_t)
                                                     ->
                                                         *mut Struct__cef_list_value_t>,
}
impl ::std::default::Default for Struct__cef_process_message_t {
    fn default() -> Struct__cef_process_message_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_process_message_t = Struct__cef_process_message_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_callback_t {
    pub base: cef_base_t,
    pub cont: ::std::option::Option<extern "C" fn
                                        (_self: *mut Struct__cef_callback_t)
                                        -> ()>,
    pub cancel: ::std::option::Option<extern "C" fn
                                          (_self: *mut Struct__cef_callback_t)
                                          -> ()>,
}
impl ::std::default::Default for Struct__cef_callback_t {
    fn default() -> Struct__cef_callback_t { unsafe { ::std::mem::zeroed() } }
}
pub type cef_callback_t = Struct__cef_callback_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_completion_callback_t {
    pub base: cef_base_t,
    pub on_complete: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_completion_callback_t)
                                               -> ()>,
}
impl ::std::default::Default for Struct__cef_completion_callback_t {
    fn default() -> Struct__cef_completion_callback_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_completion_callback_t = Struct__cef_completion_callback_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_cookie_manager_t {
    pub base: cef_base_t,
    pub set_supported_schemes: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_cookie_manager_t,
                                                          schemes:
                                                              cef_string_list_t)
                                                         -> ()>,
    pub visit_all_cookies: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_cookie_manager_t,
                                                      visitor:
                                                          *mut Struct__cef_cookie_visitor_t)
                                                     -> ::libc::c_int>,
    pub visit_url_cookies: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_cookie_manager_t,
                                                      url:
                                                          *const cef_string_t,
                                                      includeHttpOnly:
                                                          ::libc::c_int,
                                                      visitor:
                                                          *mut Struct__cef_cookie_visitor_t)
                                                     -> ::libc::c_int>,
    pub set_cookie: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_cookie_manager_t,
                                               url: *const cef_string_t,
                                               cookie:
                                                   *const Struct__cef_cookie_t)
                                              -> ::libc::c_int>,
    pub delete_cookies: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_cookie_manager_t,
                                                   url: *const cef_string_t,
                                                   cookie_name:
                                                       *const cef_string_t)
                                                  -> ::libc::c_int>,
    pub set_storage_path: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_cookie_manager_t,
                                                     path:
                                                         *const cef_string_t,
                                                     persist_session_cookies:
                                                         ::libc::c_int)
                                                    -> ::libc::c_int>,
    pub flush_store: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_cookie_manager_t,
                                                callback:
                                                    *mut Struct__cef_completion_callback_t)
                                               -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_cookie_manager_t {
    fn default() -> Struct__cef_cookie_manager_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_cookie_manager_t = Struct__cef_cookie_manager_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_cookie_visitor_t {
    pub base: cef_base_t,
    pub visit: ::std::option::Option<extern "C" fn
                                         (_self:
                                              *mut Struct__cef_cookie_visitor_t,
                                          cookie: *const Struct__cef_cookie_t,
                                          count: ::libc::c_int,
                                          total: ::libc::c_int,
                                          deleteCookie: *mut ::libc::c_int)
                                         -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_cookie_visitor_t {
    fn default() -> Struct__cef_cookie_visitor_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_cookie_visitor_t = Struct__cef_cookie_visitor_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_request_context_handler_t {
    pub base: cef_base_t,
    pub get_cookie_manager: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_request_context_handler_t)
                                                      ->
                                                          *mut Struct__cef_cookie_manager_t>,
}
impl ::std::default::Default for Struct__cef_request_context_handler_t {
    fn default() -> Struct__cef_request_context_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_request_context_handler_t =
    Struct__cef_request_context_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_request_context_t {
    pub base: cef_base_t,
    pub is_same: ::std::option::Option<extern "C" fn
                                           (_self:
                                                *mut Struct__cef_request_context_t,
                                            other:
                                                *mut Struct__cef_request_context_t)
                                           -> ::libc::c_int>,
    pub is_global: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_request_context_t)
                                             -> ::libc::c_int>,
    pub get_handler: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_request_context_t)
                                               ->
                                                   *mut Struct__cef_request_context_handler_t>,
}
impl ::std::default::Default for Struct__cef_request_context_t {
    fn default() -> Struct__cef_request_context_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_request_context_t = Struct__cef_request_context_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_browser_t {
    pub base: cef_base_t,
    pub get_host: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_browser_t)
                                            ->
                                                *mut Struct__cef_browser_host_t>,
    pub can_go_back: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_browser_t)
                                               -> ::libc::c_int>,
    pub go_back: ::std::option::Option<extern "C" fn
                                           (_self: *mut Struct__cef_browser_t)
                                           -> ()>,
    pub can_go_forward: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_browser_t)
                                                  -> ::libc::c_int>,
    pub go_forward: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_browser_t)
                                              -> ()>,
    pub is_loading: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_browser_t)
                                              -> ::libc::c_int>,
    pub reload: ::std::option::Option<extern "C" fn
                                          (_self: *mut Struct__cef_browser_t)
                                          -> ()>,
    pub reload_ignore_cache: ::std::option::Option<extern "C" fn
                                                       (_self:
                                                            *mut Struct__cef_browser_t)
                                                       -> ()>,
    pub stop_load: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_browser_t)
                                             -> ()>,
    pub get_identifier: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_browser_t)
                                                  -> ::libc::c_int>,
    pub is_same: ::std::option::Option<extern "C" fn
                                           (_self: *mut Struct__cef_browser_t,
                                            that: *mut Struct__cef_browser_t)
                                           -> ::libc::c_int>,
    pub is_popup: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_browser_t)
                                            -> ::libc::c_int>,
    pub has_document: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_browser_t)
                                                -> ::libc::c_int>,
    pub get_main_frame: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_browser_t)
                                                  ->
                                                      *mut Struct__cef_frame_t>,
    pub get_focused_frame: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_browser_t)
                                                     ->
                                                         *mut Struct__cef_frame_t>,
    pub get_frame_byident: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_browser_t,
                                                      identifier: int64)
                                                     ->
                                                         *mut Struct__cef_frame_t>,
    pub get_frame: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_browser_t,
                                              name: *const cef_string_t)
                                             -> *mut Struct__cef_frame_t>,
    pub get_frame_count: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_browser_t)
                                                   -> size_t>,
    pub get_frame_identifiers: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_browser_t,
                                                          identifiersCount:
                                                              *mut size_t,
                                                          identifiers:
                                                              *mut int64)
                                                         -> ()>,
    pub get_frame_names: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_browser_t,
                                                    names: cef_string_list_t)
                                                   -> ()>,
    pub send_process_message: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_browser_t,
                                                         target_process:
                                                             cef_process_id_t,
                                                         message:
                                                             *mut Struct__cef_process_message_t)
                                                        -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_browser_t {
    fn default() -> Struct__cef_browser_t { unsafe { ::std::mem::zeroed() } }
}
pub type cef_browser_t = Struct__cef_browser_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_run_file_dialog_callback_t {
    pub base: cef_base_t,
    pub on_file_dialog_dismissed: ::std::option::Option<extern "C" fn
                                                            (_self:
                                                                 *mut Struct__cef_run_file_dialog_callback_t,
                                                             selected_accept_filter:
                                                                 ::libc::c_int,
                                                             file_paths:
                                                                 cef_string_list_t)
                                                            -> ()>,
}
impl ::std::default::Default for Struct__cef_run_file_dialog_callback_t {
    fn default() -> Struct__cef_run_file_dialog_callback_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_run_file_dialog_callback_t =
    Struct__cef_run_file_dialog_callback_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_navigation_entry_visitor_t {
    pub base: cef_base_t,
    pub visit: ::std::option::Option<extern "C" fn
                                         (_self:
                                              *mut Struct__cef_navigation_entry_visitor_t,
                                          entry:
                                              *mut Struct__cef_navigation_entry_t,
                                          current: ::libc::c_int,
                                          index: ::libc::c_int,
                                          total: ::libc::c_int)
                                         -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_navigation_entry_visitor_t {
    fn default() -> Struct__cef_navigation_entry_visitor_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_navigation_entry_visitor_t =
    Struct__cef_navigation_entry_visitor_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_browser_host_t {
    pub base: cef_base_t,
    pub get_browser: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_browser_host_t)
                                               -> *mut Struct__cef_browser_t>,
    pub close_browser: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_browser_host_t,
                                                  force_close: ::libc::c_int)
                                                 -> ()>,
    pub set_focus: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_browser_host_t,
                                              focus: ::libc::c_int) -> ()>,
    pub set_window_visibility: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_browser_host_t,
                                                          visible:
                                                              ::libc::c_int)
                                                         -> ()>,
    pub get_window_handle: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_browser_host_t)
                                                     -> *mut ::libc::c_void>,
    pub get_opener_window_handle: ::std::option::Option<extern "C" fn
                                                            (_self:
                                                                 *mut Struct__cef_browser_host_t)
                                                            ->
                                                                *mut ::libc::c_void>,
    pub get_client: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_browser_host_t)
                                              -> *mut Struct__cef_client_t>,
    pub get_request_context: ::std::option::Option<extern "C" fn
                                                       (_self:
                                                            *mut Struct__cef_browser_host_t)
                                                       ->
                                                           *mut Struct__cef_request_context_t>,
    pub get_zoom_level: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_browser_host_t)
                                                  -> ::libc::c_double>,
    pub set_zoom_level: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_browser_host_t,
                                                   zoomLevel:
                                                       ::libc::c_double)
                                                  -> ()>,
    pub run_file_dialog: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_browser_host_t,
                                                    mode:
                                                        cef_file_dialog_mode_t,
                                                    title:
                                                        *const cef_string_t,
                                                    default_file_path:
                                                        *const cef_string_t,
                                                    accept_filters:
                                                        cef_string_list_t,
                                                    selected_accept_filter:
                                                        ::libc::c_int,
                                                    callback:
                                                        *mut Struct__cef_run_file_dialog_callback_t)
                                                   -> ()>,
    pub start_download: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_browser_host_t,
                                                   url: *const cef_string_t)
                                                  -> ()>,
    pub print: ::std::option::Option<extern "C" fn
                                         (_self:
                                              *mut Struct__cef_browser_host_t)
                                         -> ()>,
    pub find: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_browser_host_t,
                                         identifier: ::libc::c_int,
                                         searchText: *const cef_string_t,
                                         forward: ::libc::c_int,
                                         matchCase: ::libc::c_int,
                                         findNext: ::libc::c_int) -> ()>,
    pub stop_finding: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_browser_host_t,
                                                 clearSelection:
                                                     ::libc::c_int) -> ()>,
    pub show_dev_tools: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_browser_host_t,
                                                   windowInfo:
                                                       *const Struct__cef_window_info_t,
                                                   client:
                                                       *mut Struct__cef_client_t,
                                                   settings:
                                                       *const Struct__cef_browser_settings_t,
                                                   inspect_element_at:
                                                       *const cef_point_t)
                                                  -> ()>,
    pub close_dev_tools: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_browser_host_t)
                                                   -> ()>,
    pub get_navigation_entries: ::std::option::Option<extern "C" fn
                                                          (_self:
                                                               *mut Struct__cef_browser_host_t,
                                                           visitor:
                                                               *mut Struct__cef_navigation_entry_visitor_t,
                                                           current_only:
                                                               ::libc::c_int)
                                                          -> ()>,
    pub set_mouse_cursor_change_disabled: ::std::option::Option<extern "C" fn
                                                                    (_self:
                                                                         *mut Struct__cef_browser_host_t,
                                                                     disabled:
                                                                         ::libc::c_int)
                                                                    -> ()>,
    pub is_mouse_cursor_change_disabled: ::std::option::Option<extern "C" fn
                                                                   (_self:
                                                                        *mut Struct__cef_browser_host_t)
                                                                   ->
                                                                       ::libc::c_int>,
    pub replace_misspelling: ::std::option::Option<extern "C" fn
                                                       (_self:
                                                            *mut Struct__cef_browser_host_t,
                                                        word:
                                                            *const cef_string_t)
                                                       -> ()>,
    pub add_word_to_dictionary: ::std::option::Option<extern "C" fn
                                                          (_self:
                                                               *mut Struct__cef_browser_host_t,
                                                           word:
                                                               *const cef_string_t)
                                                          -> ()>,
    pub is_window_rendering_disabled: ::std::option::Option<extern "C" fn
                                                                (_self:
                                                                     *mut Struct__cef_browser_host_t)
                                                                ->
                                                                    ::libc::c_int>,
    pub was_resized: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_browser_host_t)
                                               -> ()>,
    pub was_hidden: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_browser_host_t,
                                               hidden: ::libc::c_int) -> ()>,
    pub notify_screen_info_changed: ::std::option::Option<extern "C" fn
                                                              (_self:
                                                                   *mut Struct__cef_browser_host_t)
                                                              -> ()>,
    pub invalidate: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_browser_host_t,
                                               _type:
                                                   cef_paint_element_type_t)
                                              -> ()>,
    pub send_key_event: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_browser_host_t,
                                                   event:
                                                       *const Struct__cef_key_event_t)
                                                  -> ()>,
    pub send_mouse_click_event: ::std::option::Option<extern "C" fn
                                                          (_self:
                                                               *mut Struct__cef_browser_host_t,
                                                           event:
                                                               *const Struct__cef_mouse_event_t,
                                                           _type:
                                                               cef_mouse_button_type_t,
                                                           mouseUp:
                                                               ::libc::c_int,
                                                           clickCount:
                                                               ::libc::c_int)
                                                          -> ()>,
    pub send_mouse_move_event: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_browser_host_t,
                                                          event:
                                                              *const Struct__cef_mouse_event_t,
                                                          mouseLeave:
                                                              ::libc::c_int)
                                                         -> ()>,
    pub send_mouse_wheel_event: ::std::option::Option<extern "C" fn
                                                          (_self:
                                                               *mut Struct__cef_browser_host_t,
                                                           event:
                                                               *const Struct__cef_mouse_event_t,
                                                           deltaX:
                                                               ::libc::c_int,
                                                           deltaY:
                                                               ::libc::c_int)
                                                          -> ()>,
    pub send_focus_event: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_browser_host_t,
                                                     setFocus: ::libc::c_int)
                                                    -> ()>,
    pub send_capture_lost_event: ::std::option::Option<extern "C" fn
                                                           (_self:
                                                                *mut Struct__cef_browser_host_t)
                                                           -> ()>,
    pub notify_move_or_resize_started: ::std::option::Option<extern "C" fn
                                                                 (_self:
                                                                      *mut Struct__cef_browser_host_t)
                                                                 -> ()>,
    pub get_nstext_input_context: ::std::option::Option<extern "C" fn
                                                            (_self:
                                                                 *mut Struct__cef_browser_host_t)
                                                            ->
                                                                *mut ::libc::c_void>,
    pub handle_key_event_before_text_input_client: ::std::option::Option<extern "C" fn
                                                                             (_self:
                                                                                  *mut Struct__cef_browser_host_t,
                                                                              keyEvent:
                                                                                  *mut ::libc::c_void)
                                                                             ->
                                                                                 ()>,
    pub handle_key_event_after_text_input_client: ::std::option::Option<extern "C" fn
                                                                            (_self:
                                                                                 *mut Struct__cef_browser_host_t,
                                                                             keyEvent:
                                                                                 *mut ::libc::c_void)
                                                                            ->
                                                                                ()>,
    pub drag_target_drag_enter: ::std::option::Option<extern "C" fn
                                                          (_self:
                                                               *mut Struct__cef_browser_host_t,
                                                           drag_data:
                                                               *mut Struct__cef_drag_data_t,
                                                           event:
                                                               *const Struct__cef_mouse_event_t,
                                                           allowed_ops:
                                                               cef_drag_operations_mask_t)
                                                          -> ()>,
    pub drag_target_drag_over: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_browser_host_t,
                                                          event:
                                                              *const Struct__cef_mouse_event_t,
                                                          allowed_ops:
                                                              cef_drag_operations_mask_t)
                                                         -> ()>,
    pub drag_target_drag_leave: ::std::option::Option<extern "C" fn
                                                          (_self:
                                                               *mut Struct__cef_browser_host_t)
                                                          -> ()>,
    pub drag_target_drop: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_browser_host_t,
                                                     event:
                                                         *const Struct__cef_mouse_event_t)
                                                    -> ()>,
    pub drag_source_ended_at: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_browser_host_t,
                                                         x: ::libc::c_int,
                                                         y: ::libc::c_int,
                                                         op:
                                                             cef_drag_operations_mask_t)
                                                        -> ()>,
    pub drag_source_system_drag_ended: ::std::option::Option<extern "C" fn
                                                                 (_self:
                                                                      *mut Struct__cef_browser_host_t)
                                                                 -> ()>,
}
impl ::std::default::Default for Struct__cef_browser_host_t {
    fn default() -> Struct__cef_browser_host_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_browser_host_t = Struct__cef_browser_host_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_print_settings_t {
    pub base: cef_base_t,
    pub is_valid: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_print_settings_t)
                                            -> ::libc::c_int>,
    pub is_read_only: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_print_settings_t)
                                                -> ::libc::c_int>,
    pub copy: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_print_settings_t)
                                        -> *mut Struct__cef_print_settings_t>,
    pub set_orientation: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_print_settings_t,
                                                    landscape: ::libc::c_int)
                                                   -> ()>,
    pub is_landscape: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_print_settings_t)
                                                -> ::libc::c_int>,
    pub set_printer_printable_area: ::std::option::Option<extern "C" fn
                                                              (_self:
                                                                   *mut Struct__cef_print_settings_t,
                                                               physical_size_device_units:
                                                                   *const cef_size_t,
                                                               printable_area_device_units:
                                                                   *const cef_rect_t,
                                                               landscape_needs_flip:
                                                                   ::libc::c_int)
                                                              -> ()>,
    pub set_device_name: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_print_settings_t,
                                                    name: *const cef_string_t)
                                                   -> ()>,
    pub get_device_name: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_print_settings_t)
                                                   -> cef_string_userfree_t>,
    pub set_dpi: ::std::option::Option<extern "C" fn
                                           (_self:
                                                *mut Struct__cef_print_settings_t,
                                            dpi: ::libc::c_int) -> ()>,
    pub get_dpi: ::std::option::Option<extern "C" fn
                                           (_self:
                                                *mut Struct__cef_print_settings_t)
                                           -> ::libc::c_int>,
    pub set_page_ranges: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_print_settings_t,
                                                    rangesCount: size_t,
                                                    ranges:
                                                        *const cef_page_range_t)
                                                   -> ()>,
    pub get_page_ranges_count: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_print_settings_t)
                                                         -> size_t>,
    pub get_page_ranges: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_print_settings_t,
                                                    rangesCount: *mut size_t,
                                                    ranges:
                                                        *mut cef_page_range_t)
                                                   -> ()>,
    pub set_selection_only: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_print_settings_t,
                                                       selection_only:
                                                           ::libc::c_int)
                                                      -> ()>,
    pub is_selection_only: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_print_settings_t)
                                                     -> ::libc::c_int>,
    pub set_collate: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_print_settings_t,
                                                collate: ::libc::c_int)
                                               -> ()>,
    pub will_collate: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_print_settings_t)
                                                -> ::libc::c_int>,
    pub set_color_model: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_print_settings_t,
                                                    model: cef_color_model_t)
                                                   -> ()>,
    pub get_color_model: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_print_settings_t)
                                                   -> cef_color_model_t>,
    pub set_copies: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_print_settings_t,
                                               copies: ::libc::c_int) -> ()>,
    pub get_copies: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_print_settings_t)
                                              -> ::libc::c_int>,
    pub set_duplex_mode: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_print_settings_t,
                                                    mode: cef_duplex_mode_t)
                                                   -> ()>,
    pub get_duplex_mode: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_print_settings_t)
                                                   -> cef_duplex_mode_t>,
}
impl ::std::default::Default for Struct__cef_print_settings_t {
    fn default() -> Struct__cef_print_settings_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_print_settings_t = Struct__cef_print_settings_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_print_dialog_callback_t {
    pub base: cef_base_t,
    pub cont: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_print_dialog_callback_t,
                                         settings:
                                             *mut Struct__cef_print_settings_t)
                                        -> ()>,
    pub cancel: ::std::option::Option<extern "C" fn
                                          (_self:
                                               *mut Struct__cef_print_dialog_callback_t)
                                          -> ()>,
}
impl ::std::default::Default for Struct__cef_print_dialog_callback_t {
    fn default() -> Struct__cef_print_dialog_callback_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_print_dialog_callback_t = Struct__cef_print_dialog_callback_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_print_job_callback_t {
    pub base: cef_base_t,
    pub cont: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_print_job_callback_t)
                                        -> ()>,
}
impl ::std::default::Default for Struct__cef_print_job_callback_t {
    fn default() -> Struct__cef_print_job_callback_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_print_job_callback_t = Struct__cef_print_job_callback_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_print_handler_t {
    pub base: cef_base_t,
    pub on_print_settings: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_print_handler_t,
                                                      settings:
                                                          *mut Struct__cef_print_settings_t,
                                                      get_defaults:
                                                          ::libc::c_int)
                                                     -> ()>,
    pub on_print_dialog: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_print_handler_t,
                                                    has_selection:
                                                        ::libc::c_int,
                                                    callback:
                                                        *mut Struct__cef_print_dialog_callback_t)
                                                   -> ::libc::c_int>,
    pub on_print_job: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_print_handler_t,
                                                 document_name:
                                                     *const cef_string_t,
                                                 pdf_file_path:
                                                     *const cef_string_t,
                                                 callback:
                                                     *mut Struct__cef_print_job_callback_t)
                                                -> ::libc::c_int>,
    pub on_print_reset: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_print_handler_t)
                                                  -> ()>,
}
impl ::std::default::Default for Struct__cef_print_handler_t {
    fn default() -> Struct__cef_print_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_print_handler_t = Struct__cef_print_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_browser_process_handler_t {
    pub base: cef_base_t,
    pub on_context_initialized: ::std::option::Option<extern "C" fn
                                                          (_self:
                                                               *mut Struct__cef_browser_process_handler_t)
                                                          -> ()>,
    pub on_before_child_process_launch: ::std::option::Option<extern "C" fn
                                                                  (_self:
                                                                       *mut Struct__cef_browser_process_handler_t,
                                                                   command_line:
                                                                       *mut Struct__cef_command_line_t)
                                                                  -> ()>,
    pub on_render_process_thread_created: ::std::option::Option<extern "C" fn
                                                                    (_self:
                                                                         *mut Struct__cef_browser_process_handler_t,
                                                                     extra_info:
                                                                         *mut Struct__cef_list_value_t)
                                                                    -> ()>,
    pub get_print_handler: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_browser_process_handler_t)
                                                     ->
                                                         *mut Struct__cef_print_handler_t>,
}
impl ::std::default::Default for Struct__cef_browser_process_handler_t {
    fn default() -> Struct__cef_browser_process_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_browser_process_handler_t =
    Struct__cef_browser_process_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_load_handler_t {
    pub base: cef_base_t,
    pub on_loading_state_change: ::std::option::Option<extern "C" fn
                                                           (_self:
                                                                *mut Struct__cef_load_handler_t,
                                                            browser:
                                                                *mut Struct__cef_browser_t,
                                                            isLoading:
                                                                ::libc::c_int,
                                                            canGoBack:
                                                                ::libc::c_int,
                                                            canGoForward:
                                                                ::libc::c_int)
                                                           -> ()>,
    pub on_load_start: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_load_handler_t,
                                                  browser:
                                                      *mut Struct__cef_browser_t,
                                                  frame:
                                                      *mut Struct__cef_frame_t)
                                                 -> ()>,
    pub on_load_end: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_load_handler_t,
                                                browser:
                                                    *mut Struct__cef_browser_t,
                                                frame:
                                                    *mut Struct__cef_frame_t,
                                                httpStatusCode: ::libc::c_int)
                                               -> ()>,
    pub on_load_error: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_load_handler_t,
                                                  browser:
                                                      *mut Struct__cef_browser_t,
                                                  frame:
                                                      *mut Struct__cef_frame_t,
                                                  errorCode: cef_errorcode_t,
                                                  errorText:
                                                      *const cef_string_t,
                                                  failedUrl:
                                                      *const cef_string_t)
                                                 -> ()>,
}
impl ::std::default::Default for Struct__cef_load_handler_t {
    fn default() -> Struct__cef_load_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_load_handler_t = Struct__cef_load_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_task_t {
    pub base: cef_base_t,
    pub execute: ::std::option::Option<extern "C" fn
                                           (_self: *mut Struct__cef_task_t)
                                           -> ()>,
}
impl ::std::default::Default for Struct__cef_task_t {
    fn default() -> Struct__cef_task_t { unsafe { ::std::mem::zeroed() } }
}
pub type cef_task_t = Struct__cef_task_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_task_runner_t {
    pub base: cef_base_t,
    pub is_same: ::std::option::Option<extern "C" fn
                                           (_self:
                                                *mut Struct__cef_task_runner_t,
                                            that:
                                                *mut Struct__cef_task_runner_t)
                                           -> ::libc::c_int>,
    pub belongs_to_current_thread: ::std::option::Option<extern "C" fn
                                                             (_self:
                                                                  *mut Struct__cef_task_runner_t)
                                                             ->
                                                                 ::libc::c_int>,
    pub belongs_to_thread: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_task_runner_t,
                                                      threadId:
                                                          cef_thread_id_t)
                                                     -> ::libc::c_int>,
    pub post_task: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_task_runner_t,
                                              task: *mut Struct__cef_task_t)
                                             -> ::libc::c_int>,
    pub post_delayed_task: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_task_runner_t,
                                                      task:
                                                          *mut Struct__cef_task_t,
                                                      delay_ms: int64)
                                                     -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_task_runner_t {
    fn default() -> Struct__cef_task_runner_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_task_runner_t = Struct__cef_task_runner_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_v8context_t {
    pub base: cef_base_t,
    pub get_task_runner: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_v8context_t)
                                                   ->
                                                       *mut Struct__cef_task_runner_t>,
    pub is_valid: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_v8context_t)
                                            -> ::libc::c_int>,
    pub get_browser: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_v8context_t)
                                               -> *mut Struct__cef_browser_t>,
    pub get_frame: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_v8context_t)
                                             -> *mut Struct__cef_frame_t>,
    pub get_global: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_v8context_t)
                                              -> *mut Struct__cef_v8value_t>,
    pub enter: ::std::option::Option<extern "C" fn
                                         (_self: *mut Struct__cef_v8context_t)
                                         -> ::libc::c_int>,
    pub exit: ::std::option::Option<extern "C" fn
                                        (_self: *mut Struct__cef_v8context_t)
                                        -> ::libc::c_int>,
    pub is_same: ::std::option::Option<extern "C" fn
                                           (_self:
                                                *mut Struct__cef_v8context_t,
                                            that:
                                                *mut Struct__cef_v8context_t)
                                           -> ::libc::c_int>,
    pub eval: ::std::option::Option<extern "C" fn
                                        (_self: *mut Struct__cef_v8context_t,
                                         code: *const cef_string_t,
                                         retval:
                                             *mut *mut Struct__cef_v8value_t,
                                         exception:
                                             *mut *mut Struct__cef_v8exception_t)
                                        -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_v8context_t {
    fn default() -> Struct__cef_v8context_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_v8context_t = Struct__cef_v8context_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_v8handler_t {
    pub base: cef_base_t,
    pub execute: ::std::option::Option<extern "C" fn
                                           (_self:
                                                *mut Struct__cef_v8handler_t,
                                            name: *const cef_string_t,
                                            object:
                                                *mut Struct__cef_v8value_t,
                                            argumentsCount: size_t,
                                            arguments:
                                                *const *mut Struct__cef_v8value_t,
                                            retval:
                                                *mut *mut Struct__cef_v8value_t,
                                            exception: *mut cef_string_t)
                                           -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_v8handler_t {
    fn default() -> Struct__cef_v8handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_v8handler_t = Struct__cef_v8handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_v8accessor_t {
    pub base: cef_base_t,
    pub get: ::std::option::Option<extern "C" fn
                                       (_self: *mut Struct__cef_v8accessor_t,
                                        name: *const cef_string_t,
                                        object: *mut Struct__cef_v8value_t,
                                        retval:
                                            *mut *mut Struct__cef_v8value_t,
                                        exception: *mut cef_string_t)
                                       -> ::libc::c_int>,
    pub set: ::std::option::Option<extern "C" fn
                                       (_self: *mut Struct__cef_v8accessor_t,
                                        name: *const cef_string_t,
                                        object: *mut Struct__cef_v8value_t,
                                        value: *mut Struct__cef_v8value_t,
                                        exception: *mut cef_string_t)
                                       -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_v8accessor_t {
    fn default() -> Struct__cef_v8accessor_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_v8accessor_t = Struct__cef_v8accessor_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_v8exception_t {
    pub base: cef_base_t,
    pub get_message: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_v8exception_t)
                                               -> cef_string_userfree_t>,
    pub get_source_line: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_v8exception_t)
                                                   -> cef_string_userfree_t>,
    pub get_script_resource_name: ::std::option::Option<extern "C" fn
                                                            (_self:
                                                                 *mut Struct__cef_v8exception_t)
                                                            ->
                                                                cef_string_userfree_t>,
    pub get_line_number: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_v8exception_t)
                                                   -> ::libc::c_int>,
    pub get_start_position: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_v8exception_t)
                                                      -> ::libc::c_int>,
    pub get_end_position: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_v8exception_t)
                                                    -> ::libc::c_int>,
    pub get_start_column: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_v8exception_t)
                                                    -> ::libc::c_int>,
    pub get_end_column: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_v8exception_t)
                                                  -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_v8exception_t {
    fn default() -> Struct__cef_v8exception_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_v8exception_t = Struct__cef_v8exception_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_v8value_t {
    pub base: cef_base_t,
    pub is_valid: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_v8value_t)
                                            -> ::libc::c_int>,
    pub is_undefined: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_v8value_t)
                                                -> ::libc::c_int>,
    pub is_null: ::std::option::Option<extern "C" fn
                                           (_self: *mut Struct__cef_v8value_t)
                                           -> ::libc::c_int>,
    pub is_bool: ::std::option::Option<extern "C" fn
                                           (_self: *mut Struct__cef_v8value_t)
                                           -> ::libc::c_int>,
    pub is_int: ::std::option::Option<extern "C" fn
                                          (_self: *mut Struct__cef_v8value_t)
                                          -> ::libc::c_int>,
    pub is_uint: ::std::option::Option<extern "C" fn
                                           (_self: *mut Struct__cef_v8value_t)
                                           -> ::libc::c_int>,
    pub is_double: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_v8value_t)
                                             -> ::libc::c_int>,
    pub is_date: ::std::option::Option<extern "C" fn
                                           (_self: *mut Struct__cef_v8value_t)
                                           -> ::libc::c_int>,
    pub is_string: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_v8value_t)
                                             -> ::libc::c_int>,
    pub is_object: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_v8value_t)
                                             -> ::libc::c_int>,
    pub is_array: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_v8value_t)
                                            -> ::libc::c_int>,
    pub is_function: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_v8value_t)
                                               -> ::libc::c_int>,
    pub is_same: ::std::option::Option<extern "C" fn
                                           (_self: *mut Struct__cef_v8value_t,
                                            that: *mut Struct__cef_v8value_t)
                                           -> ::libc::c_int>,
    pub get_bool_value: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_v8value_t)
                                                  -> ::libc::c_int>,
    pub get_int_value: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_v8value_t)
                                                 -> int32>,
    pub get_uint_value: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_v8value_t)
                                                  -> uint32>,
    pub get_double_value: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_v8value_t)
                                                    -> ::libc::c_double>,
    pub get_date_value: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_v8value_t)
                                                  -> cef_time_t>,
    pub get_string_value: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_v8value_t)
                                                    -> cef_string_userfree_t>,
    pub is_user_created: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_v8value_t)
                                                   -> ::libc::c_int>,
    pub has_exception: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_v8value_t)
                                                 -> ::libc::c_int>,
    pub get_exception: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_v8value_t)
                                                 ->
                                                     *mut Struct__cef_v8exception_t>,
    pub clear_exception: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_v8value_t)
                                                   -> ::libc::c_int>,
    pub will_rethrow_exceptions: ::std::option::Option<extern "C" fn
                                                           (_self:
                                                                *mut Struct__cef_v8value_t)
                                                           -> ::libc::c_int>,
    pub set_rethrow_exceptions: ::std::option::Option<extern "C" fn
                                                          (_self:
                                                               *mut Struct__cef_v8value_t,
                                                           rethrow:
                                                               ::libc::c_int)
                                                          -> ::libc::c_int>,
    pub has_value_bykey: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_v8value_t,
                                                    key: *const cef_string_t)
                                                   -> ::libc::c_int>,
    pub has_value_byindex: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_v8value_t,
                                                      index: ::libc::c_int)
                                                     -> ::libc::c_int>,
    pub delete_value_bykey: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_v8value_t,
                                                       key:
                                                           *const cef_string_t)
                                                      -> ::libc::c_int>,
    pub delete_value_byindex: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_v8value_t,
                                                         index: ::libc::c_int)
                                                        -> ::libc::c_int>,
    pub get_value_bykey: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_v8value_t,
                                                    key: *const cef_string_t)
                                                   ->
                                                       *mut Struct__cef_v8value_t>,
    pub get_value_byindex: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_v8value_t,
                                                      index: ::libc::c_int)
                                                     ->
                                                         *mut Struct__cef_v8value_t>,
    pub set_value_bykey: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_v8value_t,
                                                    key: *const cef_string_t,
                                                    value:
                                                        *mut Struct__cef_v8value_t,
                                                    attribute:
                                                        cef_v8_propertyattribute_t)
                                                   -> ::libc::c_int>,
    pub set_value_byindex: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_v8value_t,
                                                      index: ::libc::c_int,
                                                      value:
                                                          *mut Struct__cef_v8value_t)
                                                     -> ::libc::c_int>,
    pub set_value_byaccessor: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_v8value_t,
                                                         key:
                                                             *const cef_string_t,
                                                         settings:
                                                             cef_v8_accesscontrol_t,
                                                         attribute:
                                                             cef_v8_propertyattribute_t)
                                                        -> ::libc::c_int>,
    pub get_keys: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_v8value_t,
                                             keys: cef_string_list_t)
                                            -> ::libc::c_int>,
    pub set_user_data: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_v8value_t,
                                                  user_data:
                                                      *mut Struct__cef_base_t)
                                                 -> ::libc::c_int>,
    pub get_user_data: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_v8value_t)
                                                 -> *mut Struct__cef_base_t>,
    pub get_externally_allocated_memory: ::std::option::Option<extern "C" fn
                                                                   (_self:
                                                                        *mut Struct__cef_v8value_t)
                                                                   ->
                                                                       ::libc::c_int>,
    pub adjust_externally_allocated_memory: ::std::option::Option<extern "C" fn
                                                                      (_self:
                                                                           *mut Struct__cef_v8value_t,
                                                                       change_in_bytes:
                                                                           ::libc::c_int)
                                                                      ->
                                                                          ::libc::c_int>,
    pub get_array_length: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_v8value_t)
                                                    -> ::libc::c_int>,
    pub get_function_name: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_v8value_t)
                                                     ->
                                                         cef_string_userfree_t>,
    pub get_function_handler: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_v8value_t)
                                                        ->
                                                            *mut Struct__cef_v8handler_t>,
    pub execute_function: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_v8value_t,
                                                     object:
                                                         *mut Struct__cef_v8value_t,
                                                     argumentsCount: size_t,
                                                     arguments:
                                                         *const *mut Struct__cef_v8value_t)
                                                    ->
                                                        *mut Struct__cef_v8value_t>,
    pub execute_function_with_context: ::std::option::Option<extern "C" fn
                                                                 (_self:
                                                                      *mut Struct__cef_v8value_t,
                                                                  context:
                                                                      *mut Struct__cef_v8context_t,
                                                                  object:
                                                                      *mut Struct__cef_v8value_t,
                                                                  argumentsCount:
                                                                      size_t,
                                                                  arguments:
                                                                      *const *mut Struct__cef_v8value_t)
                                                                 ->
                                                                     *mut Struct__cef_v8value_t>,
}
impl ::std::default::Default for Struct__cef_v8value_t {
    fn default() -> Struct__cef_v8value_t { unsafe { ::std::mem::zeroed() } }
}
pub type cef_v8value_t = Struct__cef_v8value_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_v8stack_trace_t {
    pub base: cef_base_t,
    pub is_valid: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_v8stack_trace_t)
                                            -> ::libc::c_int>,
    pub get_frame_count: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_v8stack_trace_t)
                                                   -> ::libc::c_int>,
    pub get_frame: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_v8stack_trace_t,
                                              index: ::libc::c_int)
                                             ->
                                                 *mut Struct__cef_v8stack_frame_t>,
}
impl ::std::default::Default for Struct__cef_v8stack_trace_t {
    fn default() -> Struct__cef_v8stack_trace_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_v8stack_trace_t = Struct__cef_v8stack_trace_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_v8stack_frame_t {
    pub base: cef_base_t,
    pub is_valid: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_v8stack_frame_t)
                                            -> ::libc::c_int>,
    pub get_script_name: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_v8stack_frame_t)
                                                   -> cef_string_userfree_t>,
    pub get_script_name_or_source_url: ::std::option::Option<extern "C" fn
                                                                 (_self:
                                                                      *mut Struct__cef_v8stack_frame_t)
                                                                 ->
                                                                     cef_string_userfree_t>,
    pub get_function_name: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_v8stack_frame_t)
                                                     ->
                                                         cef_string_userfree_t>,
    pub get_line_number: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_v8stack_frame_t)
                                                   -> ::libc::c_int>,
    pub get_column: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_v8stack_frame_t)
                                              -> ::libc::c_int>,
    pub is_eval: ::std::option::Option<extern "C" fn
                                           (_self:
                                                *mut Struct__cef_v8stack_frame_t)
                                           -> ::libc::c_int>,
    pub is_constructor: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_v8stack_frame_t)
                                                  -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_v8stack_frame_t {
    fn default() -> Struct__cef_v8stack_frame_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_v8stack_frame_t = Struct__cef_v8stack_frame_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_render_process_handler_t {
    pub base: cef_base_t,
    pub on_render_thread_created: ::std::option::Option<extern "C" fn
                                                            (_self:
                                                                 *mut Struct__cef_render_process_handler_t,
                                                             extra_info:
                                                                 *mut Struct__cef_list_value_t)
                                                            -> ()>,
    pub on_web_kit_initialized: ::std::option::Option<extern "C" fn
                                                          (_self:
                                                               *mut Struct__cef_render_process_handler_t)
                                                          -> ()>,
    pub on_browser_created: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_render_process_handler_t,
                                                       browser:
                                                           *mut Struct__cef_browser_t)
                                                      -> ()>,
    pub on_browser_destroyed: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_render_process_handler_t,
                                                         browser:
                                                             *mut Struct__cef_browser_t)
                                                        -> ()>,
    pub get_load_handler: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_render_process_handler_t)
                                                    ->
                                                        *mut Struct__cef_load_handler_t>,
    pub on_before_navigation: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_render_process_handler_t,
                                                         browser:
                                                             *mut Struct__cef_browser_t,
                                                         frame:
                                                             *mut Struct__cef_frame_t,
                                                         request:
                                                             *mut Struct__cef_request_t,
                                                         navigation_type:
                                                             cef_navigation_type_t,
                                                         is_redirect:
                                                             ::libc::c_int)
                                                        -> ::libc::c_int>,
    pub on_context_created: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_render_process_handler_t,
                                                       browser:
                                                           *mut Struct__cef_browser_t,
                                                       frame:
                                                           *mut Struct__cef_frame_t,
                                                       context:
                                                           *mut Struct__cef_v8context_t)
                                                      -> ()>,
    pub on_context_released: ::std::option::Option<extern "C" fn
                                                       (_self:
                                                            *mut Struct__cef_render_process_handler_t,
                                                        browser:
                                                            *mut Struct__cef_browser_t,
                                                        frame:
                                                            *mut Struct__cef_frame_t,
                                                        context:
                                                            *mut Struct__cef_v8context_t)
                                                       -> ()>,
    pub on_uncaught_exception: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_render_process_handler_t,
                                                          browser:
                                                              *mut Struct__cef_browser_t,
                                                          frame:
                                                              *mut Struct__cef_frame_t,
                                                          context:
                                                              *mut Struct__cef_v8context_t,
                                                          exception:
                                                              *mut Struct__cef_v8exception_t,
                                                          stackTrace:
                                                              *mut Struct__cef_v8stack_trace_t)
                                                         -> ()>,
    pub on_focused_node_changed: ::std::option::Option<extern "C" fn
                                                           (_self:
                                                                *mut Struct__cef_render_process_handler_t,
                                                            browser:
                                                                *mut Struct__cef_browser_t,
                                                            frame:
                                                                *mut Struct__cef_frame_t,
                                                            node:
                                                                *mut Struct__cef_domnode_t)
                                                           -> ()>,
    pub on_process_message_received: ::std::option::Option<extern "C" fn
                                                               (_self:
                                                                    *mut Struct__cef_render_process_handler_t,
                                                                browser:
                                                                    *mut Struct__cef_browser_t,
                                                                source_process:
                                                                    cef_process_id_t,
                                                                message:
                                                                    *mut Struct__cef_process_message_t)
                                                               ->
                                                                   ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_render_process_handler_t {
    fn default() -> Struct__cef_render_process_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_render_process_handler_t = Struct__cef_render_process_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_resource_bundle_handler_t {
    pub base: cef_base_t,
    pub get_localized_string: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_resource_bundle_handler_t,
                                                         message_id:
                                                             ::libc::c_int,
                                                         string:
                                                             *mut cef_string_t)
                                                        -> ::libc::c_int>,
    pub get_data_resource: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_resource_bundle_handler_t,
                                                      resource_id:
                                                          ::libc::c_int,
                                                      data:
                                                          *mut *mut ::libc::c_void,
                                                      data_size: *mut size_t)
                                                     -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_resource_bundle_handler_t {
    fn default() -> Struct__cef_resource_bundle_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_resource_bundle_handler_t =
    Struct__cef_resource_bundle_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_response_t {
    pub base: cef_base_t,
    pub is_read_only: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_response_t)
                                                -> ::libc::c_int>,
    pub get_status: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_response_t)
                                              -> ::libc::c_int>,
    pub set_status: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_response_t,
                                               status: ::libc::c_int) -> ()>,
    pub get_status_text: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_response_t)
                                                   -> cef_string_userfree_t>,
    pub set_status_text: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_response_t,
                                                    statusText:
                                                        *const cef_string_t)
                                                   -> ()>,
    pub get_mime_type: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_response_t)
                                                 -> cef_string_userfree_t>,
    pub set_mime_type: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_response_t,
                                                  mimeType:
                                                      *const cef_string_t)
                                                 -> ()>,
    pub get_header: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_response_t,
                                               name: *const cef_string_t)
                                              -> cef_string_userfree_t>,
    pub get_header_map: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_response_t,
                                                   headerMap:
                                                       cef_string_multimap_t)
                                                  -> ()>,
    pub set_header_map: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_response_t,
                                                   headerMap:
                                                       cef_string_multimap_t)
                                                  -> ()>,
}
impl ::std::default::Default for Struct__cef_response_t {
    fn default() -> Struct__cef_response_t { unsafe { ::std::mem::zeroed() } }
}
pub type cef_response_t = Struct__cef_response_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_resource_handler_t {
    pub base: cef_base_t,
    pub process_request: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_resource_handler_t,
                                                    request:
                                                        *mut Struct__cef_request_t,
                                                    callback:
                                                        *mut Struct__cef_callback_t)
                                                   -> ::libc::c_int>,
    pub get_response_headers: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_resource_handler_t,
                                                         response:
                                                             *mut Struct__cef_response_t,
                                                         response_length:
                                                             *mut int64,
                                                         redirectUrl:
                                                             *mut cef_string_t)
                                                        -> ()>,
    pub read_response: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_resource_handler_t,
                                                  data_out:
                                                      *mut ::libc::c_void,
                                                  bytes_to_read:
                                                      ::libc::c_int,
                                                  bytes_read:
                                                      *mut ::libc::c_int,
                                                  callback:
                                                      *mut Struct__cef_callback_t)
                                                 -> ::libc::c_int>,
    pub can_get_cookie: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_resource_handler_t,
                                                   cookie:
                                                       *const Struct__cef_cookie_t)
                                                  -> ::libc::c_int>,
    pub can_set_cookie: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_resource_handler_t,
                                                   cookie:
                                                       *const Struct__cef_cookie_t)
                                                  -> ::libc::c_int>,
    pub cancel: ::std::option::Option<extern "C" fn
                                          (_self:
                                               *mut Struct__cef_resource_handler_t)
                                          -> ()>,
}
impl ::std::default::Default for Struct__cef_resource_handler_t {
    fn default() -> Struct__cef_resource_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_resource_handler_t = Struct__cef_resource_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_scheme_registrar_t {
    pub base: cef_base_t,
    pub add_custom_scheme: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_scheme_registrar_t,
                                                      scheme_name:
                                                          *const cef_string_t,
                                                      is_standard:
                                                          ::libc::c_int,
                                                      is_local: ::libc::c_int,
                                                      is_display_isolated:
                                                          ::libc::c_int)
                                                     -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_scheme_registrar_t {
    fn default() -> Struct__cef_scheme_registrar_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_scheme_registrar_t = Struct__cef_scheme_registrar_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_scheme_handler_factory_t {
    pub base: cef_base_t,
    pub create: ::std::option::Option<extern "C" fn
                                          (_self:
                                               *mut Struct__cef_scheme_handler_factory_t,
                                           browser:
                                               *mut Struct__cef_browser_t,
                                           frame: *mut Struct__cef_frame_t,
                                           scheme_name: *const cef_string_t,
                                           request:
                                               *mut Struct__cef_request_t)
                                          ->
                                              *mut Struct__cef_resource_handler_t>,
}
impl ::std::default::Default for Struct__cef_scheme_handler_factory_t {
    fn default() -> Struct__cef_scheme_handler_factory_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_scheme_handler_factory_t = Struct__cef_scheme_handler_factory_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_app_t {
    pub base: cef_base_t,
    pub on_before_command_line_processing: ::std::option::Option<extern "C" fn
                                                                     (_self:
                                                                          *mut Struct__cef_app_t,
                                                                      process_type:
                                                                          *const cef_string_t,
                                                                      command_line:
                                                                          *mut Struct__cef_command_line_t)
                                                                     -> ()>,
    pub on_register_custom_schemes: ::std::option::Option<extern "C" fn
                                                              (_self:
                                                                   *mut Struct__cef_app_t,
                                                               registrar:
                                                                   *mut Struct__cef_scheme_registrar_t)
                                                              -> ()>,
    pub get_resource_bundle_handler: ::std::option::Option<extern "C" fn
                                                               (_self:
                                                                    *mut Struct__cef_app_t)
                                                               ->
                                                                   *mut Struct__cef_resource_bundle_handler_t>,
    pub get_browser_process_handler: ::std::option::Option<extern "C" fn
                                                               (_self:
                                                                    *mut Struct__cef_app_t)
                                                               ->
                                                                   *mut Struct__cef_browser_process_handler_t>,
    pub get_render_process_handler: ::std::option::Option<extern "C" fn
                                                              (_self:
                                                                   *mut Struct__cef_app_t)
                                                              ->
                                                                  *mut Struct__cef_render_process_handler_t>,
}
impl ::std::default::Default for Struct__cef_app_t {
    fn default() -> Struct__cef_app_t { unsafe { ::std::mem::zeroed() } }
}
pub type cef_app_t = Struct__cef_app_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_auth_callback_t {
    pub base: cef_base_t,
    pub cont: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_auth_callback_t,
                                         username: *const cef_string_t,
                                         password: *const cef_string_t)
                                        -> ()>,
    pub cancel: ::std::option::Option<extern "C" fn
                                          (_self:
                                               *mut Struct__cef_auth_callback_t)
                                          -> ()>,
}
impl ::std::default::Default for Struct__cef_auth_callback_t {
    fn default() -> Struct__cef_auth_callback_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_auth_callback_t = Struct__cef_auth_callback_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_menu_model_t {
    pub base: cef_base_t,
    pub clear: ::std::option::Option<extern "C" fn
                                         (_self:
                                              *mut Struct__cef_menu_model_t)
                                         -> ::libc::c_int>,
    pub get_count: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_menu_model_t)
                                             -> ::libc::c_int>,
    pub add_separator: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_menu_model_t)
                                                 -> ::libc::c_int>,
    pub add_item: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_menu_model_t,
                                             command_id: ::libc::c_int,
                                             label: *const cef_string_t)
                                            -> ::libc::c_int>,
    pub add_check_item: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_menu_model_t,
                                                   command_id: ::libc::c_int,
                                                   label: *const cef_string_t)
                                                  -> ::libc::c_int>,
    pub add_radio_item: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_menu_model_t,
                                                   command_id: ::libc::c_int,
                                                   label: *const cef_string_t,
                                                   group_id: ::libc::c_int)
                                                  -> ::libc::c_int>,
    pub add_sub_menu: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_menu_model_t,
                                                 command_id: ::libc::c_int,
                                                 label: *const cef_string_t)
                                                ->
                                                    *mut Struct__cef_menu_model_t>,
    pub insert_separator_at: ::std::option::Option<extern "C" fn
                                                       (_self:
                                                            *mut Struct__cef_menu_model_t,
                                                        index: ::libc::c_int)
                                                       -> ::libc::c_int>,
    pub insert_item_at: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_menu_model_t,
                                                   index: ::libc::c_int,
                                                   command_id: ::libc::c_int,
                                                   label: *const cef_string_t)
                                                  -> ::libc::c_int>,
    pub insert_check_item_at: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_menu_model_t,
                                                         index: ::libc::c_int,
                                                         command_id:
                                                             ::libc::c_int,
                                                         label:
                                                             *const cef_string_t)
                                                        -> ::libc::c_int>,
    pub insert_radio_item_at: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_menu_model_t,
                                                         index: ::libc::c_int,
                                                         command_id:
                                                             ::libc::c_int,
                                                         label:
                                                             *const cef_string_t,
                                                         group_id:
                                                             ::libc::c_int)
                                                        -> ::libc::c_int>,
    pub insert_sub_menu_at: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_menu_model_t,
                                                       index: ::libc::c_int,
                                                       command_id:
                                                           ::libc::c_int,
                                                       label:
                                                           *const cef_string_t)
                                                      ->
                                                          *mut Struct__cef_menu_model_t>,
    pub remove: ::std::option::Option<extern "C" fn
                                          (_self:
                                               *mut Struct__cef_menu_model_t,
                                           command_id: ::libc::c_int)
                                          -> ::libc::c_int>,
    pub remove_at: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_menu_model_t,
                                              index: ::libc::c_int)
                                             -> ::libc::c_int>,
    pub get_index_of: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_menu_model_t,
                                                 command_id: ::libc::c_int)
                                                -> ::libc::c_int>,
    pub get_command_id_at: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_menu_model_t,
                                                      index: ::libc::c_int)
                                                     -> ::libc::c_int>,
    pub set_command_id_at: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_menu_model_t,
                                                      index: ::libc::c_int,
                                                      command_id:
                                                          ::libc::c_int)
                                                     -> ::libc::c_int>,
    pub get_label: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_menu_model_t,
                                              command_id: ::libc::c_int)
                                             -> cef_string_userfree_t>,
    pub get_label_at: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_menu_model_t,
                                                 index: ::libc::c_int)
                                                -> cef_string_userfree_t>,
    pub set_label: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_menu_model_t,
                                              command_id: ::libc::c_int,
                                              label: *const cef_string_t)
                                             -> ::libc::c_int>,
    pub set_label_at: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_menu_model_t,
                                                 index: ::libc::c_int,
                                                 label: *const cef_string_t)
                                                -> ::libc::c_int>,
    pub get_type: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_menu_model_t,
                                             command_id: ::libc::c_int)
                                            -> cef_menu_item_type_t>,
    pub get_type_at: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_menu_model_t,
                                                index: ::libc::c_int)
                                               -> cef_menu_item_type_t>,
    pub get_group_id: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_menu_model_t,
                                                 command_id: ::libc::c_int)
                                                -> ::libc::c_int>,
    pub get_group_id_at: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_menu_model_t,
                                                    index: ::libc::c_int)
                                                   -> ::libc::c_int>,
    pub set_group_id: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_menu_model_t,
                                                 command_id: ::libc::c_int,
                                                 group_id: ::libc::c_int)
                                                -> ::libc::c_int>,
    pub set_group_id_at: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_menu_model_t,
                                                    index: ::libc::c_int,
                                                    group_id: ::libc::c_int)
                                                   -> ::libc::c_int>,
    pub get_sub_menu: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_menu_model_t,
                                                 command_id: ::libc::c_int)
                                                ->
                                                    *mut Struct__cef_menu_model_t>,
    pub get_sub_menu_at: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_menu_model_t,
                                                    index: ::libc::c_int)
                                                   ->
                                                       *mut Struct__cef_menu_model_t>,
    pub is_visible: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_menu_model_t,
                                               command_id: ::libc::c_int)
                                              -> ::libc::c_int>,
    pub is_visible_at: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_menu_model_t,
                                                  index: ::libc::c_int)
                                                 -> ::libc::c_int>,
    pub set_visible: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_menu_model_t,
                                                command_id: ::libc::c_int,
                                                visible: ::libc::c_int)
                                               -> ::libc::c_int>,
    pub set_visible_at: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_menu_model_t,
                                                   index: ::libc::c_int,
                                                   visible: ::libc::c_int)
                                                  -> ::libc::c_int>,
    pub is_enabled: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_menu_model_t,
                                               command_id: ::libc::c_int)
                                              -> ::libc::c_int>,
    pub is_enabled_at: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_menu_model_t,
                                                  index: ::libc::c_int)
                                                 -> ::libc::c_int>,
    pub set_enabled: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_menu_model_t,
                                                command_id: ::libc::c_int,
                                                enabled: ::libc::c_int)
                                               -> ::libc::c_int>,
    pub set_enabled_at: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_menu_model_t,
                                                   index: ::libc::c_int,
                                                   enabled: ::libc::c_int)
                                                  -> ::libc::c_int>,
    pub is_checked: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_menu_model_t,
                                               command_id: ::libc::c_int)
                                              -> ::libc::c_int>,
    pub is_checked_at: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_menu_model_t,
                                                  index: ::libc::c_int)
                                                 -> ::libc::c_int>,
    pub set_checked: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_menu_model_t,
                                                command_id: ::libc::c_int,
                                                checked: ::libc::c_int)
                                               -> ::libc::c_int>,
    pub set_checked_at: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_menu_model_t,
                                                   index: ::libc::c_int,
                                                   checked: ::libc::c_int)
                                                  -> ::libc::c_int>,
    pub has_accelerator: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_menu_model_t,
                                                    command_id: ::libc::c_int)
                                                   -> ::libc::c_int>,
    pub has_accelerator_at: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_menu_model_t,
                                                       index: ::libc::c_int)
                                                      -> ::libc::c_int>,
    pub set_accelerator: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_menu_model_t,
                                                    command_id: ::libc::c_int,
                                                    key_code: ::libc::c_int,
                                                    shift_pressed:
                                                        ::libc::c_int,
                                                    ctrl_pressed:
                                                        ::libc::c_int,
                                                    alt_pressed:
                                                        ::libc::c_int)
                                                   -> ::libc::c_int>,
    pub set_accelerator_at: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_menu_model_t,
                                                       index: ::libc::c_int,
                                                       key_code:
                                                           ::libc::c_int,
                                                       shift_pressed:
                                                           ::libc::c_int,
                                                       ctrl_pressed:
                                                           ::libc::c_int,
                                                       alt_pressed:
                                                           ::libc::c_int)
                                                      -> ::libc::c_int>,
    pub remove_accelerator: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_menu_model_t,
                                                       command_id:
                                                           ::libc::c_int)
                                                      -> ::libc::c_int>,
    pub remove_accelerator_at: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_menu_model_t,
                                                          index:
                                                              ::libc::c_int)
                                                         -> ::libc::c_int>,
    pub get_accelerator: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_menu_model_t,
                                                    command_id: ::libc::c_int,
                                                    key_code:
                                                        *mut ::libc::c_int,
                                                    shift_pressed:
                                                        *mut ::libc::c_int,
                                                    ctrl_pressed:
                                                        *mut ::libc::c_int,
                                                    alt_pressed:
                                                        *mut ::libc::c_int)
                                                   -> ::libc::c_int>,
    pub get_accelerator_at: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_menu_model_t,
                                                       index: ::libc::c_int,
                                                       key_code:
                                                           *mut ::libc::c_int,
                                                       shift_pressed:
                                                           *mut ::libc::c_int,
                                                       ctrl_pressed:
                                                           *mut ::libc::c_int,
                                                       alt_pressed:
                                                           *mut ::libc::c_int)
                                                      -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_menu_model_t {
    fn default() -> Struct__cef_menu_model_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_menu_model_t = Struct__cef_menu_model_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_context_menu_handler_t {
    pub base: cef_base_t,
    pub on_before_context_menu: ::std::option::Option<extern "C" fn
                                                          (_self:
                                                               *mut Struct__cef_context_menu_handler_t,
                                                           browser:
                                                               *mut Struct__cef_browser_t,
                                                           frame:
                                                               *mut Struct__cef_frame_t,
                                                           params:
                                                               *mut Struct__cef_context_menu_params_t,
                                                           model:
                                                               *mut Struct__cef_menu_model_t)
                                                          -> ()>,
    pub on_context_menu_command: ::std::option::Option<extern "C" fn
                                                           (_self:
                                                                *mut Struct__cef_context_menu_handler_t,
                                                            browser:
                                                                *mut Struct__cef_browser_t,
                                                            frame:
                                                                *mut Struct__cef_frame_t,
                                                            params:
                                                                *mut Struct__cef_context_menu_params_t,
                                                            command_id:
                                                                ::libc::c_int,
                                                            event_flags:
                                                                cef_event_flags_t)
                                                           -> ::libc::c_int>,
    pub on_context_menu_dismissed: ::std::option::Option<extern "C" fn
                                                             (_self:
                                                                  *mut Struct__cef_context_menu_handler_t,
                                                              browser:
                                                                  *mut Struct__cef_browser_t,
                                                              frame:
                                                                  *mut Struct__cef_frame_t)
                                                             -> ()>,
}
impl ::std::default::Default for Struct__cef_context_menu_handler_t {
    fn default() -> Struct__cef_context_menu_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_context_menu_handler_t = Struct__cef_context_menu_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_context_menu_params_t {
    pub base: cef_base_t,
    pub get_xcoord: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_context_menu_params_t)
                                              -> ::libc::c_int>,
    pub get_ycoord: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_context_menu_params_t)
                                              -> ::libc::c_int>,
    pub get_type_flags: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_context_menu_params_t)
                                                  ->
                                                      cef_context_menu_type_flags_t>,
    pub get_link_url: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_context_menu_params_t)
                                                -> cef_string_userfree_t>,
    pub get_unfiltered_link_url: ::std::option::Option<extern "C" fn
                                                           (_self:
                                                                *mut Struct__cef_context_menu_params_t)
                                                           ->
                                                               cef_string_userfree_t>,
    pub get_source_url: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_context_menu_params_t)
                                                  -> cef_string_userfree_t>,
    pub has_image_contents: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_context_menu_params_t)
                                                      -> ::libc::c_int>,
    pub get_page_url: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_context_menu_params_t)
                                                -> cef_string_userfree_t>,
    pub get_frame_url: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_context_menu_params_t)
                                                 -> cef_string_userfree_t>,
    pub get_frame_charset: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_context_menu_params_t)
                                                     ->
                                                         cef_string_userfree_t>,
    pub get_media_type: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_context_menu_params_t)
                                                  ->
                                                      cef_context_menu_media_type_t>,
    pub get_media_state_flags: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_context_menu_params_t)
                                                         ->
                                                             cef_context_menu_media_state_flags_t>,
    pub get_selection_text: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_context_menu_params_t)
                                                      ->
                                                          cef_string_userfree_t>,
    pub get_misspelled_word: ::std::option::Option<extern "C" fn
                                                       (_self:
                                                            *mut Struct__cef_context_menu_params_t)
                                                       ->
                                                           cef_string_userfree_t>,
    pub get_misspelling_hash: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_context_menu_params_t)
                                                        -> ::libc::c_int>,
    pub get_dictionary_suggestions: ::std::option::Option<extern "C" fn
                                                              (_self:
                                                                   *mut Struct__cef_context_menu_params_t,
                                                               suggestions:
                                                                   cef_string_list_t)
                                                              ->
                                                                  ::libc::c_int>,
    pub is_editable: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_context_menu_params_t)
                                               -> ::libc::c_int>,
    pub is_spell_check_enabled: ::std::option::Option<extern "C" fn
                                                          (_self:
                                                               *mut Struct__cef_context_menu_params_t)
                                                          -> ::libc::c_int>,
    pub get_edit_state_flags: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_context_menu_params_t)
                                                        ->
                                                            cef_context_menu_edit_state_flags_t>,
}
impl ::std::default::Default for Struct__cef_context_menu_params_t {
    fn default() -> Struct__cef_context_menu_params_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_context_menu_params_t = Struct__cef_context_menu_params_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_file_dialog_callback_t {
    pub base: cef_base_t,
    pub cont: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_file_dialog_callback_t,
                                         selected_accept_filter:
                                             ::libc::c_int,
                                         file_paths: cef_string_list_t)
                                        -> ()>,
    pub cancel: ::std::option::Option<extern "C" fn
                                          (_self:
                                               *mut Struct__cef_file_dialog_callback_t)
                                          -> ()>,
}
impl ::std::default::Default for Struct__cef_file_dialog_callback_t {
    fn default() -> Struct__cef_file_dialog_callback_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_file_dialog_callback_t = Struct__cef_file_dialog_callback_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_dialog_handler_t {
    pub base: cef_base_t,
    pub on_file_dialog: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_dialog_handler_t,
                                                   browser:
                                                       *mut Struct__cef_browser_t,
                                                   mode:
                                                       cef_file_dialog_mode_t,
                                                   title: *const cef_string_t,
                                                   default_file_path:
                                                       *const cef_string_t,
                                                   accept_filters:
                                                       cef_string_list_t,
                                                   selected_accept_filter:
                                                       ::libc::c_int,
                                                   callback:
                                                       *mut Struct__cef_file_dialog_callback_t)
                                                  -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_dialog_handler_t {
    fn default() -> Struct__cef_dialog_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_dialog_handler_t = Struct__cef_dialog_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_display_handler_t {
    pub base: cef_base_t,
    pub on_address_change: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_display_handler_t,
                                                      browser:
                                                          *mut Struct__cef_browser_t,
                                                      frame:
                                                          *mut Struct__cef_frame_t,
                                                      url:
                                                          *const cef_string_t)
                                                     -> ()>,
    pub on_title_change: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_display_handler_t,
                                                    browser:
                                                        *mut Struct__cef_browser_t,
                                                    title:
                                                        *const cef_string_t)
                                                   -> ()>,
    pub on_favicon_urlchange: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_display_handler_t,
                                                         browser:
                                                             *mut Struct__cef_browser_t,
                                                         icon_urls:
                                                             cef_string_list_t)
                                                        -> ()>,
    pub on_tooltip: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_display_handler_t,
                                               browser:
                                                   *mut Struct__cef_browser_t,
                                               text: *mut cef_string_t)
                                              -> ::libc::c_int>,
    pub on_status_message: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_display_handler_t,
                                                      browser:
                                                          *mut Struct__cef_browser_t,
                                                      value:
                                                          *const cef_string_t)
                                                     -> ()>,
    pub on_console_message: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_display_handler_t,
                                                       browser:
                                                           *mut Struct__cef_browser_t,
                                                       message:
                                                           *const cef_string_t,
                                                       source:
                                                           *const cef_string_t,
                                                       line: ::libc::c_int)
                                                      -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_display_handler_t {
    fn default() -> Struct__cef_display_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_display_handler_t = Struct__cef_display_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_download_item_t {
    pub base: cef_base_t,
    pub is_valid: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_download_item_t)
                                            -> ::libc::c_int>,
    pub is_in_progress: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_download_item_t)
                                                  -> ::libc::c_int>,
    pub is_complete: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_download_item_t)
                                               -> ::libc::c_int>,
    pub is_canceled: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_download_item_t)
                                               -> ::libc::c_int>,
    pub get_current_speed: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_download_item_t)
                                                     -> int64>,
    pub get_percent_complete: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_download_item_t)
                                                        -> ::libc::c_int>,
    pub get_total_bytes: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_download_item_t)
                                                   -> int64>,
    pub get_received_bytes: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_download_item_t)
                                                      -> int64>,
    pub get_start_time: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_download_item_t)
                                                  -> cef_time_t>,
    pub get_end_time: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_download_item_t)
                                                -> cef_time_t>,
    pub get_full_path: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_download_item_t)
                                                 -> cef_string_userfree_t>,
    pub get_id: ::std::option::Option<extern "C" fn
                                          (_self:
                                               *mut Struct__cef_download_item_t)
                                          -> uint32>,
    pub get_url: ::std::option::Option<extern "C" fn
                                           (_self:
                                                *mut Struct__cef_download_item_t)
                                           -> cef_string_userfree_t>,
    pub get_original_url: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_download_item_t)
                                                    -> cef_string_userfree_t>,
    pub get_suggested_file_name: ::std::option::Option<extern "C" fn
                                                           (_self:
                                                                *mut Struct__cef_download_item_t)
                                                           ->
                                                               cef_string_userfree_t>,
    pub get_content_disposition: ::std::option::Option<extern "C" fn
                                                           (_self:
                                                                *mut Struct__cef_download_item_t)
                                                           ->
                                                               cef_string_userfree_t>,
    pub get_mime_type: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_download_item_t)
                                                 -> cef_string_userfree_t>,
}
impl ::std::default::Default for Struct__cef_download_item_t {
    fn default() -> Struct__cef_download_item_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_download_item_t = Struct__cef_download_item_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_before_download_callback_t {
    pub base: cef_base_t,
    pub cont: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_before_download_callback_t,
                                         download_path: *const cef_string_t,
                                         show_dialog: ::libc::c_int) -> ()>,
}
impl ::std::default::Default for Struct__cef_before_download_callback_t {
    fn default() -> Struct__cef_before_download_callback_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_before_download_callback_t =
    Struct__cef_before_download_callback_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_download_item_callback_t {
    pub base: cef_base_t,
    pub cancel: ::std::option::Option<extern "C" fn
                                          (_self:
                                               *mut Struct__cef_download_item_callback_t)
                                          -> ()>,
    pub pause: ::std::option::Option<extern "C" fn
                                         (_self:
                                              *mut Struct__cef_download_item_callback_t)
                                         -> ()>,
    pub resume: ::std::option::Option<extern "C" fn
                                          (_self:
                                               *mut Struct__cef_download_item_callback_t)
                                          -> ()>,
}
impl ::std::default::Default for Struct__cef_download_item_callback_t {
    fn default() -> Struct__cef_download_item_callback_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_download_item_callback_t = Struct__cef_download_item_callback_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_download_handler_t {
    pub base: cef_base_t,
    pub on_before_download: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_download_handler_t,
                                                       browser:
                                                           *mut Struct__cef_browser_t,
                                                       download_item:
                                                           *mut Struct__cef_download_item_t,
                                                       suggested_name:
                                                           *const cef_string_t,
                                                       callback:
                                                           *mut Struct__cef_before_download_callback_t)
                                                      -> ()>,
    pub on_download_updated: ::std::option::Option<extern "C" fn
                                                       (_self:
                                                            *mut Struct__cef_download_handler_t,
                                                        browser:
                                                            *mut Struct__cef_browser_t,
                                                        download_item:
                                                            *mut Struct__cef_download_item_t,
                                                        callback:
                                                            *mut Struct__cef_download_item_callback_t)
                                                       -> ()>,
}
impl ::std::default::Default for Struct__cef_download_handler_t {
    fn default() -> Struct__cef_download_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_download_handler_t = Struct__cef_download_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_drag_handler_t {
    pub base: cef_base_t,
    pub on_drag_enter: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_drag_handler_t,
                                                  browser:
                                                      *mut Struct__cef_browser_t,
                                                  dragData:
                                                      *mut Struct__cef_drag_data_t,
                                                  mask:
                                                      cef_drag_operations_mask_t)
                                                 -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_drag_handler_t {
    fn default() -> Struct__cef_drag_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_drag_handler_t = Struct__cef_drag_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_find_handler_t {
    pub base: cef_base_t,
    pub on_find_result: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_find_handler_t,
                                                   browser:
                                                       *mut Struct__cef_browser_t,
                                                   identifier: ::libc::c_int,
                                                   count: ::libc::c_int,
                                                   selectionRect:
                                                       *const cef_rect_t,
                                                   activeMatchOrdinal:
                                                       ::libc::c_int,
                                                   finalUpdate: ::libc::c_int)
                                                  -> ()>,
}
impl ::std::default::Default for Struct__cef_find_handler_t {
    fn default() -> Struct__cef_find_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_find_handler_t = Struct__cef_find_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_focus_handler_t {
    pub base: cef_base_t,
    pub on_take_focus: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_focus_handler_t,
                                                  browser:
                                                      *mut Struct__cef_browser_t,
                                                  next: ::libc::c_int) -> ()>,
    pub on_set_focus: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_focus_handler_t,
                                                 browser:
                                                     *mut Struct__cef_browser_t,
                                                 source: cef_focus_source_t)
                                                -> ::libc::c_int>,
    pub on_got_focus: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_focus_handler_t,
                                                 browser:
                                                     *mut Struct__cef_browser_t)
                                                -> ()>,
}
impl ::std::default::Default for Struct__cef_focus_handler_t {
    fn default() -> Struct__cef_focus_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_focus_handler_t = Struct__cef_focus_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_geolocation_callback_t {
    pub base: cef_base_t,
    pub cont: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_geolocation_callback_t,
                                         allow: ::libc::c_int) -> ()>,
}
impl ::std::default::Default for Struct__cef_geolocation_callback_t {
    fn default() -> Struct__cef_geolocation_callback_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_geolocation_callback_t = Struct__cef_geolocation_callback_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_geolocation_handler_t {
    pub base: cef_base_t,
    pub on_request_geolocation_permission: ::std::option::Option<extern "C" fn
                                                                     (_self:
                                                                          *mut Struct__cef_geolocation_handler_t,
                                                                      browser:
                                                                          *mut Struct__cef_browser_t,
                                                                      requesting_url:
                                                                          *const cef_string_t,
                                                                      request_id:
                                                                          ::libc::c_int,
                                                                      callback:
                                                                          *mut Struct__cef_geolocation_callback_t)
                                                                     ->
                                                                         ::libc::c_int>,
    pub on_cancel_geolocation_permission: ::std::option::Option<extern "C" fn
                                                                    (_self:
                                                                         *mut Struct__cef_geolocation_handler_t,
                                                                     browser:
                                                                         *mut Struct__cef_browser_t,
                                                                     requesting_url:
                                                                         *const cef_string_t,
                                                                     request_id:
                                                                         ::libc::c_int)
                                                                    -> ()>,
}
impl ::std::default::Default for Struct__cef_geolocation_handler_t {
    fn default() -> Struct__cef_geolocation_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_geolocation_handler_t = Struct__cef_geolocation_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_jsdialog_callback_t {
    pub base: cef_base_t,
    pub cont: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_jsdialog_callback_t,
                                         success: ::libc::c_int,
                                         user_input: *const cef_string_t)
                                        -> ()>,
}
impl ::std::default::Default for Struct__cef_jsdialog_callback_t {
    fn default() -> Struct__cef_jsdialog_callback_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_jsdialog_callback_t = Struct__cef_jsdialog_callback_t;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__cef_jsdialog_handler_t {
    pub base: cef_base_t,
    pub on_jsdialog: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_jsdialog_handler_t,
                                                browser:
                                                    *mut Struct__cef_browser_t,
                                                origin_url:
                                                    *const cef_string_t,
                                                accept_lang:
                                                    *const cef_string_t,
                                                dialog_type:
                                                    cef_jsdialog_type_t,
                                                message_text:
                                                    *const cef_string_t,
                                                default_prompt_text:
                                                    *const cef_string_t,
                                                callback:
                                                    *mut Struct__cef_jsdialog_callback_t,
                                                suppress_message:
                                                    *mut ::libc::c_int)
                                               -> ::libc::c_int>,
    pub on_before_unload_dialog: ::std::option::Option<extern "C" fn
                                                           (_self:
                                                                *mut Struct__cef_jsdialog_handler_t,
                                                            browser:
                                                                *mut Struct__cef_browser_t,
                                                            message_text:
                                                                *const cef_string_t,
                                                            is_reload:
                                                                ::libc::c_int,
                                                            callback:
                                                                *mut Struct__cef_jsdialog_callback_t)
                                                           -> ::libc::c_int>,
    pub on_reset_dialog_state: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_jsdialog_handler_t,
                                                          browser:
                                                              *mut Struct__cef_browser_t)
                                                         -> ()>,
    pub on_dialog_closed: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_jsdialog_handler_t,
                                                     browser:
                                                         *mut Struct__cef_browser_t)
                                                    -> ()>,
}
impl Clone for Struct__cef_jsdialog_handler_t {
    fn clone(&self) -> Struct__cef_jsdialog_handler_t {
        *self
    }
}

impl ::std::default::Default for Struct__cef_jsdialog_handler_t {
    fn default() -> Struct__cef_jsdialog_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_jsdialog_handler_t = Struct__cef_jsdialog_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_keyboard_handler_t {
    pub base: cef_base_t,
    pub on_pre_key_event: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_keyboard_handler_t,
                                                     browser:
                                                         *mut Struct__cef_browser_t,
                                                     event:
                                                         *const Struct__cef_key_event_t,
                                                     os_event:
                                                         *mut ::libc::c_void,
                                                     is_keyboard_shortcut:
                                                         *mut ::libc::c_int)
                                                    -> ::libc::c_int>,
    pub on_key_event: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_keyboard_handler_t,
                                                 browser:
                                                     *mut Struct__cef_browser_t,
                                                 event:
                                                     *const Struct__cef_key_event_t,
                                                 os_event:
                                                     *mut ::libc::c_void)
                                                -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_keyboard_handler_t {
    fn default() -> Struct__cef_keyboard_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_keyboard_handler_t = Struct__cef_keyboard_handler_t;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__cef_life_span_handler_t {
    pub base: cef_base_t,
    pub on_before_popup: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_life_span_handler_t,
                                                    browser:
                                                        *mut Struct__cef_browser_t,
                                                    frame:
                                                        *mut Struct__cef_frame_t,
                                                    target_url:
                                                        *const cef_string_t,
                                                    target_frame_name:
                                                        *const cef_string_t,
                                                    popupFeatures:
                                                        *const Struct__cef_popup_features_t,
                                                    windowInfo:
                                                        *mut Struct__cef_window_info_t,
                                                    client:
                                                        *mut *mut Struct__cef_client_t,
                                                    settings:
                                                        *mut Struct__cef_browser_settings_t,
                                                    no_javascript_access:
                                                        *mut ::libc::c_int)
                                                   -> ::libc::c_int>,
    pub on_after_created: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_life_span_handler_t,
                                                     browser:
                                                         *mut Struct__cef_browser_t)
                                                    -> ()>,
    pub run_modal: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_life_span_handler_t,
                                              browser:
                                                  *mut Struct__cef_browser_t)
                                             -> ::libc::c_int>,
    pub do_close: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_life_span_handler_t,
                                             browser:
                                                 *mut Struct__cef_browser_t)
                                            -> ::libc::c_int>,
    pub on_before_close: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_life_span_handler_t,
                                                    browser:
                                                        *mut Struct__cef_browser_t)
                                                   -> ()>,
}
impl Clone for Struct__cef_life_span_handler_t {
    fn clone(&self) -> Struct__cef_life_span_handler_t {
        *self
    }
}
impl ::std::default::Default for Struct__cef_life_span_handler_t {
    fn default() -> Struct__cef_life_span_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_life_span_handler_t = Struct__cef_life_span_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_render_handler_t {
    pub base: cef_base_t,
    pub get_root_screen_rect: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_render_handler_t,
                                                         browser:
                                                             *mut Struct__cef_browser_t,
                                                         rect:
                                                             *mut cef_rect_t)
                                                        -> ::libc::c_int>,
    pub get_view_rect: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_render_handler_t,
                                                  browser:
                                                      *mut Struct__cef_browser_t,
                                                  rect: *mut cef_rect_t)
                                                 -> ::libc::c_int>,
    pub get_screen_point: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_render_handler_t,
                                                     browser:
                                                         *mut Struct__cef_browser_t,
                                                     viewX: ::libc::c_int,
                                                     viewY: ::libc::c_int,
                                                     screenX:
                                                         *mut ::libc::c_int,
                                                     screenY:
                                                         *mut ::libc::c_int)
                                                    -> ::libc::c_int>,
    pub get_screen_info: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_render_handler_t,
                                                    browser:
                                                        *mut Struct__cef_browser_t,
                                                    screen_info:
                                                        *mut Struct__cef_screen_info_t)
                                                   -> ::libc::c_int>,
    pub on_popup_show: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_render_handler_t,
                                                  browser:
                                                      *mut Struct__cef_browser_t,
                                                  show: ::libc::c_int) -> ()>,
    pub on_popup_size: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_render_handler_t,
                                                  browser:
                                                      *mut Struct__cef_browser_t,
                                                  rect: *const cef_rect_t)
                                                 -> ()>,
    pub on_paint: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_render_handler_t,
                                             browser:
                                                 *mut Struct__cef_browser_t,
                                             _type: cef_paint_element_type_t,
                                             dirtyRectsCount: size_t,
                                             dirtyRects: *const cef_rect_t,
                                             buffer: *const ::libc::c_void,
                                             width: ::libc::c_int,
                                             height: ::libc::c_int) -> ()>,
    pub on_cursor_change: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_render_handler_t,
                                                     browser:
                                                         *mut Struct__cef_browser_t,
                                                     cursor:
                                                         *mut ::libc::c_void,
                                                     _type: cef_cursor_type_t,
                                                     custom_cursor_info:
                                                         *const Struct__cef_cursor_info_t)
                                                    -> ()>,
    pub start_dragging: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_render_handler_t,
                                                   browser:
                                                       *mut Struct__cef_browser_t,
                                                   drag_data:
                                                       *mut Struct__cef_drag_data_t,
                                                   allowed_ops:
                                                       cef_drag_operations_mask_t,
                                                   x: ::libc::c_int,
                                                   y: ::libc::c_int)
                                                  -> ::libc::c_int>,
    pub update_drag_cursor: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_render_handler_t,
                                                       browser:
                                                           *mut Struct__cef_browser_t,
                                                       operation:
                                                           cef_drag_operations_mask_t)
                                                      -> ()>,
    pub on_scroll_offset_changed: ::std::option::Option<extern "C" fn
                                                            (_self:
                                                                 *mut Struct__cef_render_handler_t,
                                                             browser:
                                                                 *mut Struct__cef_browser_t)
                                                            -> ()>,
}
impl ::std::default::Default for Struct__cef_render_handler_t {
    fn default() -> Struct__cef_render_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_render_handler_t = Struct__cef_render_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_web_plugin_info_t {
    pub base: cef_base_t,
    pub get_name: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_web_plugin_info_t)
                                            -> cef_string_userfree_t>,
    pub get_path: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_web_plugin_info_t)
                                            -> cef_string_userfree_t>,
    pub get_version: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_web_plugin_info_t)
                                               -> cef_string_userfree_t>,
    pub get_description: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_web_plugin_info_t)
                                                   -> cef_string_userfree_t>,
}
impl ::std::default::Default for Struct__cef_web_plugin_info_t {
    fn default() -> Struct__cef_web_plugin_info_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_web_plugin_info_t = Struct__cef_web_plugin_info_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_web_plugin_info_visitor_t {
    pub base: cef_base_t,
    pub visit: ::std::option::Option<extern "C" fn
                                         (_self:
                                              *mut Struct__cef_web_plugin_info_visitor_t,
                                          info:
                                              *mut Struct__cef_web_plugin_info_t,
                                          count: ::libc::c_int,
                                          total: ::libc::c_int)
                                         -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_web_plugin_info_visitor_t {
    fn default() -> Struct__cef_web_plugin_info_visitor_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_web_plugin_info_visitor_t =
    Struct__cef_web_plugin_info_visitor_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_web_plugin_unstable_callback_t {
    pub base: cef_base_t,
    pub is_unstable: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_web_plugin_unstable_callback_t,
                                                path: *const cef_string_t,
                                                unstable: ::libc::c_int)
                                               -> ()>,
}
impl ::std::default::Default for Struct__cef_web_plugin_unstable_callback_t {
    fn default() -> Struct__cef_web_plugin_unstable_callback_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_web_plugin_unstable_callback_t =
    Struct__cef_web_plugin_unstable_callback_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_quota_callback_t {
    pub base: cef_base_t,
    pub cont: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_quota_callback_t,
                                         allow: ::libc::c_int) -> ()>,
    pub cancel: ::std::option::Option<extern "C" fn
                                          (_self:
                                               *mut Struct__cef_quota_callback_t)
                                          -> ()>,
}
impl ::std::default::Default for Struct__cef_quota_callback_t {
    fn default() -> Struct__cef_quota_callback_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_quota_callback_t = Struct__cef_quota_callback_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_allow_certificate_error_callback_t {
    pub base: cef_base_t,
    pub cont: ::std::option::Option<extern "C" fn
                                        (_self:
                                             *mut Struct__cef_allow_certificate_error_callback_t,
                                         allow: ::libc::c_int) -> ()>,
}
impl ::std::default::Default for
 Struct__cef_allow_certificate_error_callback_t {
    fn default() -> Struct__cef_allow_certificate_error_callback_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_allow_certificate_error_callback_t =
    Struct__cef_allow_certificate_error_callback_t;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__cef_request_handler_t {
    pub base: cef_base_t,
    pub on_before_browse: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_request_handler_t,
                                                     browser:
                                                         *mut Struct__cef_browser_t,
                                                     frame:
                                                         *mut Struct__cef_frame_t,
                                                     request:
                                                         *mut Struct__cef_request_t,
                                                     is_redirect:
                                                         ::libc::c_int)
                                                    -> ::libc::c_int>,
    pub on_before_resource_load: ::std::option::Option<extern "C" fn
                                                           (_self:
                                                                *mut Struct__cef_request_handler_t,
                                                            browser:
                                                                *mut Struct__cef_browser_t,
                                                            frame:
                                                                *mut Struct__cef_frame_t,
                                                            request:
                                                                *mut Struct__cef_request_t)
                                                           -> ::libc::c_int>,
    pub get_resource_handler: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_request_handler_t,
                                                         browser:
                                                             *mut Struct__cef_browser_t,
                                                         frame:
                                                             *mut Struct__cef_frame_t,
                                                         request:
                                                             *mut Struct__cef_request_t)
                                                        ->
                                                            *mut Struct__cef_resource_handler_t>,
    pub on_resource_redirect: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_request_handler_t,
                                                         browser:
                                                             *mut Struct__cef_browser_t,
                                                         frame:
                                                             *mut Struct__cef_frame_t,
                                                         old_url:
                                                             *const cef_string_t,
                                                         new_url:
                                                             *mut cef_string_t)
                                                        -> ()>,
    pub get_auth_credentials: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_request_handler_t,
                                                         browser:
                                                             *mut Struct__cef_browser_t,
                                                         frame:
                                                             *mut Struct__cef_frame_t,
                                                         isProxy:
                                                             ::libc::c_int,
                                                         host:
                                                             *const cef_string_t,
                                                         port: ::libc::c_int,
                                                         realm:
                                                             *const cef_string_t,
                                                         scheme:
                                                             *const cef_string_t,
                                                         callback:
                                                             *mut Struct__cef_auth_callback_t)
                                                        -> ::libc::c_int>,
    pub on_quota_request: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_request_handler_t,
                                                     browser:
                                                         *mut Struct__cef_browser_t,
                                                     origin_url:
                                                         *const cef_string_t,
                                                     new_size: int64,
                                                     callback:
                                                         *mut Struct__cef_quota_callback_t)
                                                    -> ::libc::c_int>,
    pub on_protocol_execution: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_request_handler_t,
                                                          browser:
                                                              *mut Struct__cef_browser_t,
                                                          url:
                                                              *const cef_string_t,
                                                          allow_os_execution:
                                                              *mut ::libc::c_int)
                                                         -> ()>,
    pub on_certificate_error: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_request_handler_t,
                                                         cert_error:
                                                             cef_errorcode_t,
                                                         request_url:
                                                             *const cef_string_t,
                                                         callback:
                                                             *mut Struct__cef_allow_certificate_error_callback_t)
                                                        -> ::libc::c_int>,
    pub on_before_plugin_load: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_request_handler_t,
                                                          browser:
                                                              *mut Struct__cef_browser_t,
                                                          url:
                                                              *const cef_string_t,
                                                          policy_url:
                                                              *const cef_string_t,
                                                          info:
                                                              *mut Struct__cef_web_plugin_info_t)
                                                         -> ::libc::c_int>,
    pub on_plugin_crashed: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_request_handler_t,
                                                      browser:
                                                          *mut Struct__cef_browser_t,
                                                      plugin_path:
                                                          *const cef_string_t)
                                                     -> ()>,
    pub on_render_process_terminated: ::std::option::Option<extern "C" fn
                                                                (_self:
                                                                     *mut Struct__cef_request_handler_t,
                                                                 browser:
                                                                     *mut Struct__cef_browser_t,
                                                                 status:
                                                                     cef_termination_status_t)
                                                                -> ()>,
}
impl Clone for Struct__cef_request_handler_t {
    fn clone(&self) -> Struct__cef_request_handler_t {
        *self
    }
}

impl ::std::default::Default for Struct__cef_request_handler_t {
    fn default() -> Struct__cef_request_handler_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_request_handler_t = Struct__cef_request_handler_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_client_t {
    pub base: cef_base_t,
    pub get_context_menu_handler: ::std::option::Option<extern "C" fn
                                                            (_self:
                                                                 *mut Struct__cef_client_t)
                                                            ->
                                                                *mut Struct__cef_context_menu_handler_t>,
    pub get_dialog_handler: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_client_t)
                                                      ->
                                                          *mut Struct__cef_dialog_handler_t>,
    pub get_display_handler: ::std::option::Option<extern "C" fn
                                                       (_self:
                                                            *mut Struct__cef_client_t)
                                                       ->
                                                           *mut Struct__cef_display_handler_t>,
    pub get_download_handler: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_client_t)
                                                        ->
                                                            *mut Struct__cef_download_handler_t>,
    pub get_drag_handler: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_client_t)
                                                    ->
                                                        *mut Struct__cef_drag_handler_t>,
    pub get_find_handler: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_client_t)
                                                    ->
                                                        *mut Struct__cef_find_handler_t>,
    pub get_focus_handler: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_client_t)
                                                     ->
                                                         *mut Struct__cef_focus_handler_t>,
    pub get_geolocation_handler: ::std::option::Option<extern "C" fn
                                                           (_self:
                                                                *mut Struct__cef_client_t)
                                                           ->
                                                               *mut Struct__cef_geolocation_handler_t>,
    pub get_jsdialog_handler: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_client_t)
                                                        ->
                                                            *mut Struct__cef_jsdialog_handler_t>,
    pub get_keyboard_handler: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_client_t)
                                                        ->
                                                            *mut Struct__cef_keyboard_handler_t>,
    pub get_life_span_handler: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_client_t)
                                                         ->
                                                             *mut Struct__cef_life_span_handler_t>,
    pub get_load_handler: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_client_t)
                                                    ->
                                                        *mut Struct__cef_load_handler_t>,
    pub get_render_handler: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_client_t)
                                                      ->
                                                          *mut Struct__cef_render_handler_t>,
    pub get_request_handler: ::std::option::Option<extern "C" fn
                                                       (_self:
                                                            *mut Struct__cef_client_t)
                                                       ->
                                                           *mut Struct__cef_request_handler_t>,
    pub on_process_message_received: ::std::option::Option<extern "C" fn
                                                               (_self:
                                                                    *mut Struct__cef_client_t,
                                                                browser:
                                                                    *mut Struct__cef_browser_t,
                                                                source_process:
                                                                    cef_process_id_t,
                                                                message:
                                                                    *mut Struct__cef_process_message_t)
                                                               ->
                                                                   ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_client_t {
    fn default() -> Struct__cef_client_t { unsafe { ::std::mem::zeroed() } }
}
pub type cef_client_t = Struct__cef_client_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_get_geolocation_callback_t {
    pub base: cef_base_t,
    pub on_location_update: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_get_geolocation_callback_t,
                                                       position:
                                                           *const Struct__cef_geoposition_t)
                                                      -> ()>,
}
impl ::std::default::Default for Struct__cef_get_geolocation_callback_t {
    fn default() -> Struct__cef_get_geolocation_callback_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_get_geolocation_callback_t =
    Struct__cef_get_geolocation_callback_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_end_tracing_callback_t {
    pub base: cef_base_t,
    pub on_end_tracing_complete: ::std::option::Option<extern "C" fn
                                                           (_self:
                                                                *mut Struct__cef_end_tracing_callback_t,
                                                            tracing_file:
                                                                *const cef_string_t)
                                                           -> ()>,
}
impl ::std::default::Default for Struct__cef_end_tracing_callback_t {
    fn default() -> Struct__cef_end_tracing_callback_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_end_tracing_callback_t = Struct__cef_end_tracing_callback_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_urlrequest_t {
    pub base: cef_base_t,
    pub get_request: ::std::option::Option<extern "C" fn
                                               (_self:
                                                    *mut Struct__cef_urlrequest_t)
                                               -> *mut Struct__cef_request_t>,
    pub get_client: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_urlrequest_t)
                                              ->
                                                  *mut Struct__cef_urlrequest_client_t>,
    pub get_request_status: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_urlrequest_t)
                                                      ->
                                                          cef_urlrequest_status_t>,
    pub get_request_error: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_urlrequest_t)
                                                     -> cef_errorcode_t>,
    pub get_response: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_urlrequest_t)
                                                ->
                                                    *mut Struct__cef_response_t>,
    pub cancel: ::std::option::Option<extern "C" fn
                                          (_self:
                                               *mut Struct__cef_urlrequest_t)
                                          -> ()>,
}
impl ::std::default::Default for Struct__cef_urlrequest_t {
    fn default() -> Struct__cef_urlrequest_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_urlrequest_t = Struct__cef_urlrequest_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_urlrequest_client_t {
    pub base: cef_base_t,
    pub on_request_complete: ::std::option::Option<extern "C" fn
                                                       (_self:
                                                            *mut Struct__cef_urlrequest_client_t,
                                                        request:
                                                            *mut Struct__cef_urlrequest_t)
                                                       -> ()>,
    pub on_upload_progress: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_urlrequest_client_t,
                                                       request:
                                                           *mut Struct__cef_urlrequest_t,
                                                       current: int64,
                                                       total: int64) -> ()>,
    pub on_download_progress: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_urlrequest_client_t,
                                                         request:
                                                             *mut Struct__cef_urlrequest_t,
                                                         current: int64,
                                                         total: int64) -> ()>,
    pub on_download_data: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_urlrequest_client_t,
                                                     request:
                                                         *mut Struct__cef_urlrequest_t,
                                                     data:
                                                         *const ::libc::c_void,
                                                     data_length: size_t)
                                                    -> ()>,
    pub get_auth_credentials: ::std::option::Option<extern "C" fn
                                                        (_self:
                                                             *mut Struct__cef_urlrequest_client_t,
                                                         isProxy:
                                                             ::libc::c_int,
                                                         host:
                                                             *const cef_string_t,
                                                         port: ::libc::c_int,
                                                         realm:
                                                             *const cef_string_t,
                                                         scheme:
                                                             *const cef_string_t,
                                                         callback:
                                                             *mut Struct__cef_auth_callback_t)
                                                        -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_urlrequest_client_t {
    fn default() -> Struct__cef_urlrequest_client_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_urlrequest_client_t = Struct__cef_urlrequest_client_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_xml_reader_t {
    pub base: cef_base_t,
    pub move_to_next_node: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_xml_reader_t)
                                                     -> ::libc::c_int>,
    pub close: ::std::option::Option<extern "C" fn
                                         (_self:
                                              *mut Struct__cef_xml_reader_t)
                                         -> ::libc::c_int>,
    pub has_error: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_xml_reader_t)
                                             -> ::libc::c_int>,
    pub get_error: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_xml_reader_t)
                                             -> cef_string_userfree_t>,
    pub get_type: ::std::option::Option<extern "C" fn
                                            (_self:
                                                 *mut Struct__cef_xml_reader_t)
                                            -> cef_xml_node_type_t>,
    pub get_depth: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_xml_reader_t)
                                             -> ::libc::c_int>,
    pub get_local_name: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_xml_reader_t)
                                                  -> cef_string_userfree_t>,
    pub get_prefix: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_xml_reader_t)
                                              -> cef_string_userfree_t>,
    pub get_qualified_name: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_xml_reader_t)
                                                      ->
                                                          cef_string_userfree_t>,
    pub get_namespace_uri: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_xml_reader_t)
                                                     ->
                                                         cef_string_userfree_t>,
    pub get_base_uri: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_xml_reader_t)
                                                -> cef_string_userfree_t>,
    pub get_xml_lang: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_xml_reader_t)
                                                -> cef_string_userfree_t>,
    pub is_empty_element: ::std::option::Option<extern "C" fn
                                                    (_self:
                                                         *mut Struct__cef_xml_reader_t)
                                                    -> ::libc::c_int>,
    pub has_value: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_xml_reader_t)
                                             -> ::libc::c_int>,
    pub get_value: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_xml_reader_t)
                                             -> cef_string_userfree_t>,
    pub has_attributes: ::std::option::Option<extern "C" fn
                                                  (_self:
                                                       *mut Struct__cef_xml_reader_t)
                                                  -> ::libc::c_int>,
    pub get_attribute_count: ::std::option::Option<extern "C" fn
                                                       (_self:
                                                            *mut Struct__cef_xml_reader_t)
                                                       -> size_t>,
    pub get_attribute_byindex: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_xml_reader_t,
                                                          index:
                                                              ::libc::c_int)
                                                         ->
                                                             cef_string_userfree_t>,
    pub get_attribute_byqname: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_xml_reader_t,
                                                          qualifiedName:
                                                              *const cef_string_t)
                                                         ->
                                                             cef_string_userfree_t>,
    pub get_attribute_bylname: ::std::option::Option<extern "C" fn
                                                         (_self:
                                                              *mut Struct__cef_xml_reader_t,
                                                          localName:
                                                              *const cef_string_t,
                                                          namespaceURI:
                                                              *const cef_string_t)
                                                         ->
                                                             cef_string_userfree_t>,
    pub get_inner_xml: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_xml_reader_t)
                                                 -> cef_string_userfree_t>,
    pub get_outer_xml: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_xml_reader_t)
                                                 -> cef_string_userfree_t>,
    pub get_line_number: ::std::option::Option<extern "C" fn
                                                   (_self:
                                                        *mut Struct__cef_xml_reader_t)
                                                   -> ::libc::c_int>,
    pub move_to_attribute_byindex: ::std::option::Option<extern "C" fn
                                                             (_self:
                                                                  *mut Struct__cef_xml_reader_t,
                                                              index:
                                                                  ::libc::c_int)
                                                             ->
                                                                 ::libc::c_int>,
    pub move_to_attribute_byqname: ::std::option::Option<extern "C" fn
                                                             (_self:
                                                                  *mut Struct__cef_xml_reader_t,
                                                              qualifiedName:
                                                                  *const cef_string_t)
                                                             ->
                                                                 ::libc::c_int>,
    pub move_to_attribute_bylname: ::std::option::Option<extern "C" fn
                                                             (_self:
                                                                  *mut Struct__cef_xml_reader_t,
                                                              localName:
                                                                  *const cef_string_t,
                                                              namespaceURI:
                                                                  *const cef_string_t)
                                                             ->
                                                                 ::libc::c_int>,
    pub move_to_first_attribute: ::std::option::Option<extern "C" fn
                                                           (_self:
                                                                *mut Struct__cef_xml_reader_t)
                                                           -> ::libc::c_int>,
    pub move_to_next_attribute: ::std::option::Option<extern "C" fn
                                                          (_self:
                                                               *mut Struct__cef_xml_reader_t)
                                                          -> ::libc::c_int>,
    pub move_to_carrying_element: ::std::option::Option<extern "C" fn
                                                            (_self:
                                                                 *mut Struct__cef_xml_reader_t)
                                                            -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_xml_reader_t {
    fn default() -> Struct__cef_xml_reader_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_xml_reader_t = Struct__cef_xml_reader_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Struct__cef_zip_reader_t {
    pub base: cef_base_t,
    pub move_to_first_file: ::std::option::Option<extern "C" fn
                                                      (_self:
                                                           *mut Struct__cef_zip_reader_t)
                                                      -> ::libc::c_int>,
    pub move_to_next_file: ::std::option::Option<extern "C" fn
                                                     (_self:
                                                          *mut Struct__cef_zip_reader_t)
                                                     -> ::libc::c_int>,
    pub move_to_file: ::std::option::Option<extern "C" fn
                                                (_self:
                                                     *mut Struct__cef_zip_reader_t,
                                                 fileName:
                                                     *const cef_string_t,
                                                 caseSensitive: ::libc::c_int)
                                                -> ::libc::c_int>,
    pub close: ::std::option::Option<extern "C" fn
                                         (_self:
                                              *mut Struct__cef_zip_reader_t)
                                         -> ::libc::c_int>,
    pub get_file_name: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_zip_reader_t)
                                                 -> cef_string_userfree_t>,
    pub get_file_size: ::std::option::Option<extern "C" fn
                                                 (_self:
                                                      *mut Struct__cef_zip_reader_t)
                                                 -> int64>,
    pub get_file_last_modified: ::std::option::Option<extern "C" fn
                                                          (_self:
                                                               *mut Struct__cef_zip_reader_t)
                                                          -> time_t>,
    pub open_file: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_zip_reader_t,
                                              password: *const cef_string_t)
                                             -> ::libc::c_int>,
    pub close_file: ::std::option::Option<extern "C" fn
                                              (_self:
                                                   *mut Struct__cef_zip_reader_t)
                                              -> ::libc::c_int>,
    pub read_file: ::std::option::Option<extern "C" fn
                                             (_self:
                                                  *mut Struct__cef_zip_reader_t,
                                              buffer: *mut ::libc::c_void,
                                              bufferSize: size_t)
                                             -> ::libc::c_int>,
    pub tell: ::std::option::Option<extern "C" fn
                                        (_self: *mut Struct__cef_zip_reader_t)
                                        -> int64>,
    pub eof: ::std::option::Option<extern "C" fn
                                       (_self: *mut Struct__cef_zip_reader_t)
                                       -> ::libc::c_int>,
}
impl ::std::default::Default for Struct__cef_zip_reader_t {
    fn default() -> Struct__cef_zip_reader_t {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type cef_zip_reader_t = Struct__cef_zip_reader_t;
